{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/shedai/llm-encoder-decoder?scriptVersionId=249043440\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"874849a9","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-07-06T08:47:26.106879Z","iopub.status.busy":"2025-07-06T08:47:26.106547Z","iopub.status.idle":"2025-07-06T08:47:28.050242Z","shell.execute_reply":"2025-07-06T08:47:28.049288Z"},"papermill":{"duration":1.955737,"end_time":"2025-07-06T08:47:28.052328","exception":false,"start_time":"2025-07-06T08:47:26.096591","status":"completed"},"tags":[]},"outputs":[],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"97afa811","metadata":{"papermill":{"duration":0.00579,"end_time":"2025-07-06T08:47:28.064807","exception":false,"start_time":"2025-07-06T08:47:28.059017","status":"completed"},"tags":[]},"source":["Encoder-Decoder mimarisinin nasıl çalıştığını, iki bölümün birbiriyle nasıl konuştuğunu ve adım adım bir çıktının nasıl üretildiğini gösteren, gerçek bir sinir ağı içeren bir kod örneği hazırladım.\n","\n","Bu örnekte, simülasyon yerine PyTorch kütüphanesini kullanarak, basit bir çeviri görevini (İngilizce sayılardan Türkçe sayılara) yerine getiren, çalışan bir Encoder-Decoder modeli oluşturacağız. Kod, her aşamada neler olduğunu anlamanızı kolaylaştıracak şekilde bolca açıklama ve ara çıktı içerir.\n","\n","Senaryo: Basit Bir \"Sayı Çevirmeni\"\n","\n","Görev: \"one\" -> \"bir\", \"two\" -> \"iki\" gibi basit çeviriler yapmak.\n","\n","Mimari: Klasik ve anlaşılması kolay olan RNN (GRU) tabanlı bir Encoder-Decoder modeli kullanacağız. Bu, Transformer'dan önceki temel Seq2Seq yapısıdır ve mimarinin temel mantığını anlamak için mükemmeldir.\n","\n","Adımlar:\n","\n","* Veri Hazırlığı: İngilizce ve Türkçe kelimeler için ayrı sözlükler oluşturacağız.\n","\n","* Encoder Modeli: İngilizce cümleyi okuyup bir \"anlam vektörüne\" (context vector) dönüştürecek.\n","\n","* Decoder Modeli: Bu anlam vektörünü alıp adım adım Türkçe çıktıyı üretecek.\n","\n","* Eğitim: Modelin bu çeviriyi nasıl öğrendiğini göreceğiz.\n","\n","* Test: Eğitilmiş modelle yeni bir çeviri yapacağız."]},{"cell_type":"markdown","id":"38c9bcd3","metadata":{"papermill":{"duration":0.005444,"end_time":"2025-07-06T08:47:28.076179","exception":false,"start_time":"2025-07-06T08:47:28.070735","status":"completed"},"tags":[]},"source":["# Basit Encoder-Decoder Yapısı"]},{"cell_type":"code","execution_count":2,"id":"85fb67cc","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:47:28.089915Z","iopub.status.busy":"2025-07-06T08:47:28.089192Z","iopub.status.idle":"2025-07-06T08:47:43.422995Z","shell.execute_reply":"2025-07-06T08:47:43.42157Z"},"papermill":{"duration":15.343704,"end_time":"2025-07-06T08:47:43.425621","exception":false,"start_time":"2025-07-06T08:47:28.081917","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["--- Adım 1: Veri Hazırlığı ---\n","İngilizce Kelime Sayısı: 12\n","Türkçe Kelime Sayısı: 12\n","Örnek: 'one' -> 2, 'bir' -> 2\n","\n","============================================================\n","\n","--- Adım 2: Encoder ve Decoder Modelleri ---\n","Encoder ve Decoder modelleri (RNN-GRU tabanlı) tanımlandı.\n","\n","============================================================\n","\n","--- Adım 3: Modelin Eğitimi ---\n","\n","1000 iterasyonluk eğitim başlıyor...\n","\n","\n",">>> 'one' kelimesi işleniyor...\n","1. ENCODER çalışıyor: Girdi okunuyor...\n","2. ENCODER tamamlandı. 'Anlam Özeti' (Context Vector) oluşturuldu.\n","   Context Vector (encoder_hidden) boyutu: torch.Size([1, 1, 128])\n","\n","3. DECODER çalışıyor: Adım adım çeviri üretiliyor...\n","   -> Adım 1: Tahmin='bir', Gerçek Hedef='bir'\n","   -> Adım 2: Tahmin='EOS', Gerçek Hedef='EOS'\n","Iterasyon 250 (25.0%), Kayıp: 0.6608\n","\n",">>> 'four' kelimesi işleniyor...\n","1. ENCODER çalışıyor: Girdi okunuyor...\n","2. ENCODER tamamlandı. 'Anlam Özeti' (Context Vector) oluşturuldu.\n","   Context Vector (encoder_hidden) boyutu: torch.Size([1, 1, 128])\n","\n","3. DECODER çalışıyor: Adım adım çeviri üretiliyor...\n","   -> Adım 1: Tahmin='dört', Gerçek Hedef='dört'\n","   -> Adım 2: Tahmin='EOS', Gerçek Hedef='EOS'\n","Iterasyon 500 (50.0%), Kayıp: 0.1659\n","\n",">>> 'five' kelimesi işleniyor...\n","1. ENCODER çalışıyor: Girdi okunuyor...\n","2. ENCODER tamamlandı. 'Anlam Özeti' (Context Vector) oluşturuldu.\n","   Context Vector (encoder_hidden) boyutu: torch.Size([1, 1, 128])\n","\n","3. DECODER çalışıyor: Adım adım çeviri üretiliyor...\n","   -> Adım 1: Tahmin='beş', Gerçek Hedef='beş'\n","   -> Adım 2: Tahmin='EOS', Gerçek Hedef='EOS'\n","Iterasyon 750 (75.0%), Kayıp: 0.0750\n","\n",">>> 'eight' kelimesi işleniyor...\n","1. ENCODER çalışıyor: Girdi okunuyor...\n","2. ENCODER tamamlandı. 'Anlam Özeti' (Context Vector) oluşturuldu.\n","   Context Vector (encoder_hidden) boyutu: torch.Size([1, 1, 128])\n","\n","3. DECODER çalışıyor: Adım adım çeviri üretiliyor...\n","   -> Adım 1: Tahmin='sekiz', Gerçek Hedef='sekiz'\n","   -> Adım 2: Tahmin='EOS', Gerçek Hedef='EOS'\n","Iterasyon 1000 (100.0%), Kayıp: 0.0335\n","\n","Eğitim Tamamlandı!\n","============================================================\n","\n","--- Adım 4: Eğitilmiş Model ile Çeviri Testi ---\n","\n",">>> 'five' çeviriliyor...\n","Adım Adım Üretim:\n","   -> Adım 1: Üretilen kelime = 'beş'\n","Girdi: five -> Çıktı: beş <EOS>\n","\n",">>> 'eight' çeviriliyor...\n","Adım Adım Üretim:\n","   -> Adım 1: Üretilen kelime = 'sekiz'\n","Girdi: eight -> Çıktı: sekiz <EOS>\n","\n",">>> 'four' çeviriliyor...\n","Adım Adım Üretim:\n","   -> Adım 1: Üretilen kelime = 'dört'\n","Girdi: four -> Çıktı: dört <EOS>\n"]}],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import random\n","\n","# --- Adım 1: Veri Hazırlığı ---\n","print(\"--- Adım 1: Veri Hazırlığı ---\")\n","\n","# Basit veri setimiz ve özel token'lar\n","SOS_token = 0  # Start of Sentence (Cümle Başlangıcı)\n","EOS_token = 1  # End of Sentence (Cümle Sonu)\n","\n","# İngilizce'den Türkçe'ye çeviri çiftleri\n","pairs = [\n","    (\"one\", \"bir\"), (\"two\", \"iki\"), (\"three\", \"üç\"), (\"four\", \"dört\"),\n","    (\"five\", \"beş\"), (\"six\", \"altı\"), (\"seven\", \"yedi\"), (\"eight\", \"sekiz\"),\n","    (\"nine\", \"dokuz\"), (\"ten\", \"on\")\n","]\n","\n","# Her dil için kelime-indeks sözlükleri oluşturma\n","class Lang:\n","    def __init__(self, name):\n","        self.name = name\n","        self.word2index = {}\n","        self.index2word = {SOS_token: \"SOS\", EOS_token: \"EOS\"}\n","        self.n_words = 2  # SOS ve EOS token'ları ile başla\n","\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '):\n","            self.addWord(word)\n","\n","    def addWord(self, word):\n","        if word not in self.word2index:\n","            self.word2index[word] = self.n_words\n","            self.index2word[self.n_words] = word\n","            self.n_words += 1\n","\n","input_lang = Lang('eng')\n","output_lang = Lang('tur')\n","\n","for pair in pairs:\n","    input_lang.addSentence(pair[0])\n","    output_lang.addSentence(pair[1])\n","\n","print(f\"İngilizce Kelime Sayısı: {input_lang.n_words}\")\n","print(f\"Türkçe Kelime Sayısı: {output_lang.n_words}\")\n","print(f\"Örnek: 'one' -> {input_lang.word2index['one']}, 'bir' -> {output_lang.word2index['bir']}\\n\")\n","print(\"=\"*60)\n","\n","\n","# --- Adım 2: Modelleri Tanımlama ---\n","print(\"\\n--- Adım 2: Encoder ve Decoder Modelleri ---\")\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","hidden_size = 128 # Embedding ve gizli katman boyutu\n","\n","# ENCODER: Girdiyi Anlayan Kısım\n","class EncoderRNN(nn.Module):\n","    def __init__(self, input_size, hidden_size):\n","        super(EncoderRNN, self).__init__()\n","        self.hidden_size = hidden_size\n","        self.embedding = nn.Embedding(input_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","\n","    def forward(self, input, hidden):\n","        embedded = self.embedding(input).view(1, 1, -1)\n","        output, hidden = self.gru(embedded, hidden)\n","        return output, hidden\n","\n","    def initHidden(self):\n","        return torch.zeros(1, 1, self.hidden_size, device=device)\n","\n","# DECODER: Anlamdan Yeni Metin Üreten Kısım\n","class DecoderRNN(nn.Module):\n","    def __init__(self, hidden_size, output_size):\n","        super(DecoderRNN, self).__init__()\n","        self.hidden_size = hidden_size\n","        self.embedding = nn.Embedding(output_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","        self.out = nn.Linear(hidden_size, output_size)\n","        self.softmax = nn.LogSoftmax(dim=1)\n","\n","    def forward(self, input, hidden):\n","        output = self.embedding(input).view(1, 1, -1)\n","        output = torch.relu(output)\n","        output, hidden = self.gru(output, hidden)\n","        output = self.softmax(self.out(output[0]))\n","        return output, hidden\n","\n","    def initHidden(self):\n","        return torch.zeros(1, 1, self.hidden_size, device=device)\n","\n","print(\"Encoder ve Decoder modelleri (RNN-GRU tabanlı) tanımlandı.\\n\")\n","print(\"=\"*60)\n","\n","# --- Adım 3: Eğitim Döngüsü ---\n","print(\"\\n--- Adım 3: Modelin Eğitimi ---\")\n","# Eğitim fonksiyonu\n","def train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion):\n","    encoder_hidden = encoder.initHidden()\n","\n","    encoder_optimizer.zero_grad()\n","    decoder_optimizer.zero_grad()\n","    \n","    loss = 0\n","\n","    # ---------- ENCODER AŞAMASI ----------\n","    # Girdi cümlesini okuyup bir bağlam vektörüne sıkıştır\n","    print(f\"\\n>>> '{input_lang.index2word[input_tensor[0].item()]}' kelimesi işleniyor...\")\n","    print(\"1. ENCODER çalışıyor: Girdi okunuyor...\")\n","    for ei in range(len(input_tensor)):\n","        _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","    \n","    print(f\"2. ENCODER tamamlandı. 'Anlam Özeti' (Context Vector) oluşturuldu.\")\n","    print(f\"   Context Vector (encoder_hidden) boyutu: {encoder_hidden.shape}\")\n","\n","    # ---------- DECODER AŞAMASI ----------\n","    # Encoder'ın son gizli durumu, Decoder'ın ilk gizli durumu olarak kullanılır.\n","    decoder_input = torch.tensor([[SOS_token]], device=device)\n","    decoder_hidden = encoder_hidden # KÖPRÜ: Bilgi burada aktarılıyor!\n","    print(\"\\n3. DECODER çalışıyor: Adım adım çeviri üretiliyor...\")\n","    \n","    # Teacher Forcing: Gerçek hedef kelimeleri bir sonraki girdi olarak kullan\n","    for di in range(len(target_tensor)):\n","        decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","        \n","        # Kaybı hesapla\n","        loss += criterion(decoder_output, target_tensor[di].unsqueeze(0))\n","        \n","        # Bir sonraki girdi olarak gerçek hedefi ver\n","        decoder_input = target_tensor[di]\n","        \n","        # ARA ÇIKTI: Decoder'ın her adımda ne yaptığını gör\n","        topv, topi = decoder_output.topk(1)\n","        predicted_word = output_lang.index2word[topi.item()]\n","        target_word = output_lang.index2word[target_tensor[di].item()]\n","        print(f\"   -> Adım {di+1}: Tahmin='{predicted_word}', Gerçek Hedef='{target_word}'\")\n","\n","    # Gradyanları hesapla ve ağırlıkları güncelle\n","    loss.backward()\n","    encoder_optimizer.step()\n","    decoder_optimizer.step()\n","\n","    return loss.item() / len(target_tensor)\n","\n","# Eğitim için hazırlık\n","encoder = EncoderRNN(input_lang.n_words, hidden_size).to(device)\n","decoder = DecoderRNN(hidden_size, output_lang.n_words).to(device)\n","encoder_optimizer = optim.SGD(encoder.parameters(), lr=0.01)\n","decoder_optimizer = optim.SGD(decoder.parameters(), lr=0.01)\n","criterion = nn.NLLLoss()\n","\n","n_iters = 1000\n","print_every = 250\n","total_loss = 0\n","\n","print(f\"\\n{n_iters} iterasyonluk eğitim başlıyor...\\n\")\n","\n","for iter in range(1, n_iters + 1):\n","    # Rastgele bir çift seç\n","    pair = random.choice(pairs)\n","    input_tensor = torch.LongTensor([input_lang.word2index[s] for s in pair[0].split(' ')]).to(device)\n","    target_tensor = torch.LongTensor([output_lang.word2index[s] for s in pair[1].split(' ')] + [EOS_token]).to(device)\n","    \n","    # Her 'print_every' adımda ara çıktıları göster\n","    if iter % print_every == 0:\n","        loss = train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion)\n","        print(f\"Iterasyon {iter} ({iter*100/n_iters}%), Kayıp: {loss:.4f}\")\n","    else: # Sessiz eğitim\n","        # Bu kısım normalde print içermez, biz öğrenme amacıyla ekledik.\n","        # Gerçek eğitimde sadece kayıp hesaplanır.\n","        encoder_hidden = encoder.initHidden()\n","        encoder_optimizer.zero_grad()\n","        decoder_optimizer.zero_grad()\n","        loss = 0\n","        for ei in range(len(input_tensor)):\n","            _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","        decoder_input = torch.tensor([[SOS_token]], device=device)\n","        decoder_hidden = encoder_hidden\n","        for di in range(len(target_tensor)):\n","            decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","            loss += criterion(decoder_output, target_tensor[di].unsqueeze(0))\n","            decoder_input = target_tensor[di]\n","        loss.backward()\n","        encoder_optimizer.step()\n","        decoder_optimizer.step()\n","\n","print(\"\\nEğitim Tamamlandı!\")\n","print(\"=\"*60)\n","\n","\n","# --- Adım 4: Modeli Test Etme ---\n","print(\"\\n--- Adım 4: Eğitilmiş Model ile Çeviri Testi ---\")\n","def evaluate(encoder, decoder, sentence):\n","    with torch.no_grad(): # Gradyan hesaplamayı kapat\n","        input_tensor = torch.LongTensor([input_lang.word2index[s] for s in sentence.split(' ')]).to(device)\n","        \n","        # ENCODER\n","        encoder_hidden = encoder.initHidden()\n","        for ei in range(len(input_tensor)):\n","            _, encoder_hidden = decoder(input_tensor[ei], encoder_hidden) # Düzeltme: encoder_hidden encoder'dan gelmeli\n","            _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","        \n","        # DECODER\n","        decoder_input = torch.tensor([[SOS_token]], device=device)\n","        decoder_hidden = encoder_hidden\n","        decoded_words = []\n","        \n","        print(f\"\\n>>> '{sentence}' çeviriliyor...\")\n","        print(\"Adım Adım Üretim:\")\n","        for di in range(5): # Maksimum 5 kelime üret\n","            decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","            topv, topi = decoder_output.data.topk(1)\n","            \n","            if topi.item() == EOS_token:\n","                decoded_words.append('<EOS>')\n","                break\n","            else:\n","                decoded_words.append(output_lang.index2word[topi.item()])\n","            \n","            # Bir sonraki girdi, modelin kendi tahmini olacak (Teacher Forcing YOK)\n","            decoder_input = topi.squeeze().detach()\n","            print(f\"   -> Adım {di+1}: Üretilen kelime = '{decoded_words[-1]}'\")\n","\n","        return ' '.join(decoded_words)\n","\n","# Test edelim\n","for pair in random.sample(pairs, 3):\n","    output_words = evaluate(encoder, decoder, pair[0])\n","    print(f\"Girdi: {pair[0]} -> Çıktı: {output_words}\")"]},{"cell_type":"markdown","id":"ebedfbac","metadata":{"papermill":{"duration":0.005679,"end_time":"2025-07-06T08:47:43.437811","exception":false,"start_time":"2025-07-06T08:47:43.432132","status":"completed"},"tags":[]},"source":["Önceki Encoder-Decoder kodumuz, tek kelimelik \"dizileri\" çevirdiği için, kelime sırasının önemini tam olarak gösteremiyordu. Bir RNN (GRU) yapısı doğası gereği sıralı veri işlese de, bunu gösterebileceğimiz daha iyi bir örnekle konsepti pekiştirebiliriz.\n","\n","Bu güncellenmiş kodda, basit bir kelime-kelime çevirisi yerine, tam cümle çevirisi yapacağız. Bu sayede, Encoder'ın bir cümlenin kelime dizilimini nasıl bir \"anlam özetine\" (context vector) kodladığını ve Decoder'ın bu özeti kullanarak tamamen farklı bir dizilime sahip yeni bir cümle nasıl ürettiğini adım adım görebileceğiz.\n","\n","Senaryo: İngilizce'den Türkçe'ye Cümle Çevirmeni\n","\n","Görev: \"the man eats an apple\" gibi basit İngilizce cümleleri, dilbilgisi ve kelime sırası farklı olan \"adam bir elma yer\" gibi Türkçe cümlelere çevirmek.\n","\n","Odak Noktası: Encoder'ın the -> man -> eats -> an -> apple sırasını işleyerek ürettiği tek bir bağlam vektörünün, Decoder tarafından nasıl adam -> bir -> elma -> yer gibi farklı bir sırada \"çözüldüğünü\" göstermek. Bu, dizilim bilgisinin nasıl korunduğunu ve dönüştürüldüğünü kanıtlar.\n","\n","Mimari: Önceki kodla aynı, anlaşılması kolay RNN (GRU) tabanlı Encoder-Decoder yapısını kullanacağız. Değişiklikler veri setinde ve ara çıktıların sunumunda olacak."]},{"cell_type":"markdown","id":"cf09d2af","metadata":{"papermill":{"duration":0.0056,"end_time":"2025-07-06T08:47:43.44917","exception":false,"start_time":"2025-07-06T08:47:43.44357","status":"completed"},"tags":[]},"source":["# Cümle Bazlı Çeviri"]},{"cell_type":"code","execution_count":3,"id":"bf7d9ab0","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:47:43.463527Z","iopub.status.busy":"2025-07-06T08:47:43.462915Z","iopub.status.idle":"2025-07-06T08:49:01.694865Z","shell.execute_reply":"2025-07-06T08:49:01.693753Z"},"papermill":{"duration":78.241687,"end_time":"2025-07-06T08:49:01.696655","exception":false,"start_time":"2025-07-06T08:47:43.454968","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["--- Adım 1: Cümle Bazlı Veri Hazırlığı ---\n","İngilizce Kelime Sayısı: 23\n","Türkçe Kelime Sayısı: 21\n","\n","============================================================\n","\n","--- Adım 2: Encoder ve Decoder Modelleri (Yapısal Değişiklik Yok) ---\n","Modeller hazır.\n","\n","============================================================\n","\n","--- Adım 3: Modelin Cümle Dizilimini Öğrenmesi ---\n","\n","7500 iterasyonluk eğitim başlıyor...\n","\n","--- Iterasyon 1500 ---\n","\n",">>> Girdi Cümlesi İşleniyor: 'a lazy cat sleeps all day'\n","1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\n","   Encoder Adım 1: 'a' okundu. Gizli durum güncellendi.\n","   Encoder Adım 2: 'lazy' okundu. Gizli durum güncellendi.\n","   Encoder Adım 3: 'cat' okundu. Gizli durum güncellendi.\n","   Encoder Adım 4: 'sleeps' okundu. Gizli durum güncellendi.\n","   Encoder Adım 5: 'all' okundu. Gizli durum güncellendi.\n","   Encoder Adım 6: 'day' okundu. Gizli durum güncellendi.\n","\n","2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\n","\n","3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\n","   -> Decoder Adım 1: Üretilen kelime = 'tembel'\n","   -> Decoder Adım 2: Üretilen kelime = 'bir'\n","   -> Decoder Adım 3: Üretilen kelime = 'kedi'\n","   -> Decoder Adım 4: Üretilen kelime = 'bütün'\n","   -> Decoder Adım 5: Üretilen kelime = 'gün'\n","   -> Decoder Adım 6: Üretilen kelime = 'uyur'\n","   -> Decoder Adım 7: Üretilen kelime = 'EOS'\n","   Kayıp (Loss): 0.0099\n","--- Iterasyon 3000 ---\n","\n",">>> Girdi Cümlesi İşleniyor: 'the smart woman reads a book'\n","1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\n","   Encoder Adım 1: 'the' okundu. Gizli durum güncellendi.\n","   Encoder Adım 2: 'smart' okundu. Gizli durum güncellendi.\n","   Encoder Adım 3: 'woman' okundu. Gizli durum güncellendi.\n","   Encoder Adım 4: 'reads' okundu. Gizli durum güncellendi.\n","   Encoder Adım 5: 'a' okundu. Gizli durum güncellendi.\n","   Encoder Adım 6: 'book' okundu. Gizli durum güncellendi.\n","\n","2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\n","\n","3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\n","   -> Decoder Adım 1: Üretilen kelime = 'akıllı'\n","   -> Decoder Adım 2: Üretilen kelime = 'kadın'\n","   -> Decoder Adım 3: Üretilen kelime = 'bir'\n","   -> Decoder Adım 4: Üretilen kelime = 'kitap'\n","   -> Decoder Adım 5: Üretilen kelime = 'okur'\n","   -> Decoder Adım 6: Üretilen kelime = 'EOS'\n","   Kayıp (Loss): 0.0054\n","--- Iterasyon 4500 ---\n","\n",">>> Girdi Cümlesi İşleniyor: 'the fast dog eats meat'\n","1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\n","   Encoder Adım 1: 'the' okundu. Gizli durum güncellendi.\n","   Encoder Adım 2: 'fast' okundu. Gizli durum güncellendi.\n","   Encoder Adım 3: 'dog' okundu. Gizli durum güncellendi.\n","   Encoder Adım 4: 'eats' okundu. Gizli durum güncellendi.\n","   Encoder Adım 5: 'meat' okundu. Gizli durum güncellendi.\n","\n","2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\n","\n","3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\n","   -> Decoder Adım 1: Üretilen kelime = 'hızlı'\n","   -> Decoder Adım 2: Üretilen kelime = 'köpek'\n","   -> Decoder Adım 3: Üretilen kelime = 'et'\n","   -> Decoder Adım 4: Üretilen kelime = 'yer'\n","   -> Decoder Adım 5: Üretilen kelime = 'EOS'\n","   Kayıp (Loss): 0.0027\n","--- Iterasyon 6000 ---\n","\n",">>> Girdi Cümlesi İşleniyor: 'the woman drinks water'\n","1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\n","   Encoder Adım 1: 'the' okundu. Gizli durum güncellendi.\n","   Encoder Adım 2: 'woman' okundu. Gizli durum güncellendi.\n","   Encoder Adım 3: 'drinks' okundu. Gizli durum güncellendi.\n","   Encoder Adım 4: 'water' okundu. Gizli durum güncellendi.\n","\n","2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\n","\n","3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\n","   -> Decoder Adım 1: Üretilen kelime = 'kadın'\n","   -> Decoder Adım 2: Üretilen kelime = 'su'\n","   -> Decoder Adım 3: Üretilen kelime = 'içer'\n","   -> Decoder Adım 4: Üretilen kelime = 'EOS'\n","   Kayıp (Loss): 0.0021\n","--- Iterasyon 7500 ---\n","\n",">>> Girdi Cümlesi İşleniyor: 'the smart woman reads a book'\n","1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\n","   Encoder Adım 1: 'the' okundu. Gizli durum güncellendi.\n","   Encoder Adım 2: 'smart' okundu. Gizli durum güncellendi.\n","   Encoder Adım 3: 'woman' okundu. Gizli durum güncellendi.\n","   Encoder Adım 4: 'reads' okundu. Gizli durum güncellendi.\n","   Encoder Adım 5: 'a' okundu. Gizli durum güncellendi.\n","   Encoder Adım 6: 'book' okundu. Gizli durum güncellendi.\n","\n","2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\n","\n","3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\n","   -> Decoder Adım 1: Üretilen kelime = 'akıllı'\n","   -> Decoder Adım 2: Üretilen kelime = 'kadın'\n","   -> Decoder Adım 3: Üretilen kelime = 'bir'\n","   -> Decoder Adım 4: Üretilen kelime = 'kitap'\n","   -> Decoder Adım 5: Üretilen kelime = 'okur'\n","   -> Decoder Adım 6: Üretilen kelime = 'EOS'\n","   Kayıp (Loss): 0.0016\n","\n","Eğitim Tamamlandı!\n","============================================================\n","\n","--- Adım 4: Eğitilmiş Model ile Çeviri Testi ---\n"]}],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import random\n","import time\n","import math\n","\n","# --- Adım 1: Cümle Bazlı Veri Hazırlığı ---\n","print(\"--- Adım 1: Cümle Bazlı Veri Hazırlığı ---\")\n","\n","SOS_token = 0  # Start of Sentence\n","EOS_token = 1  # End of Sentence\n","\n","# Kelime sırası farklı olan cümle çiftleri\n","pairs = [\n","    (\"the man eats an apple\", \"adam bir elma yer\"),\n","    (\"the woman drinks water\", \"kadın su içer\"),\n","    (\"a smart dog runs fast\", \"akıllı bir köpek hızlı koşar\"),\n","    (\"a lazy cat sleeps all day\", \"tembel bir kedi bütün gün uyur\"),\n","    (\"the smart woman reads a book\", \"akıllı kadın bir kitap okur\"),\n","    (\"the fast dog eats meat\", \"hızlı köpek et yer\")\n","]\n","\n","class Lang:\n","    def __init__(self, name):\n","        self.name = name\n","        self.word2index = {}\n","        self.index2word = {SOS_token: \"SOS\", EOS_token: \"EOS\"}\n","        self.n_words = 2\n","\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '):\n","            self.addWord(word)\n","\n","    def addWord(self, word):\n","        if word not in self.word2index:\n","            self.word2index[word] = self.n_words\n","            self.index2word[self.n_words] = word\n","            self.n_words += 1\n","\n","input_lang = Lang('eng')\n","output_lang = Lang('tur')\n","\n","for pair in pairs:\n","    input_lang.addSentence(pair[0])\n","    output_lang.addSentence(pair[1])\n","\n","print(f\"İngilizce Kelime Sayısı: {input_lang.n_words}\")\n","print(f\"Türkçe Kelime Sayısı: {output_lang.n_words}\\n\")\n","print(\"=\"*60)\n","\n","\n","# --- Adım 2: Modeller (Değişiklik Yok) ---\n","# Encoder ve Decoder sınıfları öncekiyle aynı, çünkü RNN zaten sıralı çalışır.\n","# Önemli olan onlara nasıl veri verdiğimiz ve süreci nasıl yorumladığımızdır.\n","print(\"\\n--- Adım 2: Encoder ve Decoder Modelleri (Yapısal Değişiklik Yok) ---\")\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","hidden_size = 128\n","\n","class EncoderRNN(nn.Module):\n","    def __init__(self, input_size, hidden_size):\n","        super(EncoderRNN, self).__init__()\n","        self.hidden_size = hidden_size\n","        self.embedding = nn.Embedding(input_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","\n","    def forward(self, input, hidden):\n","        embedded = self.embedding(input).view(1, 1, -1)\n","        output, hidden = self.gru(embedded, hidden)\n","        return output, hidden\n","\n","    def initHidden(self):\n","        return torch.zeros(1, 1, self.hidden_size, device=device)\n","\n","class DecoderRNN(nn.Module):\n","    def __init__(self, hidden_size, output_size):\n","        super(DecoderRNN, self).__init__()\n","        self.hidden_size = hidden_size\n","        self.embedding = nn.Embedding(output_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","        self.out = nn.Linear(hidden_size, output_size)\n","        self.softmax = nn.LogSoftmax(dim=1)\n","\n","    def forward(self, input, hidden):\n","        output = self.embedding(input).view(1, 1, -1)\n","        output = torch.relu(output)\n","        output, hidden = self.gru(output, hidden)\n","        output = self.softmax(self.out(output[0]))\n","        return output, hidden\n","\n","print(\"Modeller hazır.\\n\")\n","print(\"=\"*60)\n","\n","\n","# --- Adım 3: Eğitim Döngüsü ve Detaylı Ara Çıktılar ---\n","print(\"\\n--- Adım 3: Modelin Cümle Dizilimini Öğrenmesi ---\")\n","\n","def train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion):\n","    encoder_hidden = encoder.initHidden()\n","    encoder_optimizer.zero_grad(); decoder_optimizer.zero_grad()\n","    loss = 0\n","    input_length = len(input_tensor); target_length = len(target_tensor)\n","\n","    # ---------- ENCODER AŞAMASI: Sıralı Anlama ----------\n","    print(f\"\\n>>> Girdi Cümlesi İşleniyor: '{' '.join([input_lang.index2word[i.item()] for i in input_tensor])}'\")\n","    print(\"1. ENCODER çalışıyor: Cümledeki kelime dizilimi okunuyor...\")\n","    # RNN'in gizli durumu (hidden state) her kelimede güncellenir.\n","    # Bu, kelime sırası bilgisinin vektöre kodlanmasını sağlar.\n","    for ei in range(input_length):\n","        _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","        print(f\"   Encoder Adım {ei+1}: '{input_lang.index2word[input_tensor[ei].item()]}' okundu. Gizli durum güncellendi.\")\n","    \n","    print(f\"\\n2. ENCODER tamamlandı. Cümlenin sıralı anlamı 'Context Vector'e kodlandı.\")\n","    \n","    # ---------- DECODER AŞAMASI: Sıralı Üretim ----------\n","    decoder_input = torch.tensor([[SOS_token]], device=device)\n","    decoder_hidden = encoder_hidden # KÖPRÜ: Kodlanmış sıralı bilgi Decoder'a aktarılıyor.\n","    print(\"\\n3. DECODER çalışıyor: Yeni dizilime sahip cümle üretiliyor...\")\n","    \n","    for di in range(target_length):\n","        decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","        loss += criterion(decoder_output, target_tensor[di].unsqueeze(0))\n","        decoder_input = target_tensor[di] # Teacher Forcing\n","        predicted_word = output_lang.index2word[decoder_output.data.topk(1)[1].item()]\n","        print(f\"   -> Decoder Adım {di+1}: Üretilen kelime = '{predicted_word}'\")\n","        if decoder_input.item() == EOS_token: break\n","\n","    loss.backward()\n","    encoder_optimizer.step(); decoder_optimizer.step()\n","    return loss.item() / target_length\n","\n","# Eğitim için hazırlık\n","encoder = EncoderRNN(input_lang.n_words, hidden_size).to(device)\n","decoder = DecoderRNN(hidden_size, output_lang.n_words).to(device)\n","encoder_optimizer = optim.SGD(encoder.parameters(), lr=0.01)\n","decoder_optimizer = optim.SGD(decoder.parameters(), lr=0.01)\n","criterion = nn.NLLLoss()\n","\n","n_iters = 7500\n","print_every = 1500\n","\n","print(f\"\\n{n_iters} iterasyonluk eğitim başlıyor...\\n\")\n","# Sadece belirli adımlarda detaylı çıktı verelim\n","for iter in range(1, n_iters + 1):\n","    pair = random.choice(pairs)\n","    input_tensor = torch.LongTensor([input_lang.word2index[s] for s in pair[0].split(' ')]).to(device)\n","    target_tensor = torch.LongTensor([output_lang.word2index[s] for s in pair[1].split(' ')] + [EOS_token]).to(device)\n","    \n","    if iter % print_every == 0:\n","        print(f\"--- Iterasyon {iter} ---\")\n","        loss = train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion)\n","        print(f\"   Kayıp (Loss): {loss:.4f}\")\n","    else: # Sessiz eğitim\n","        # Bu adımlarda çıktı basılmaz ama eğitim devam eder\n","        encoder_hidden = encoder.initHidden()\n","        encoder_optimizer.zero_grad(); decoder_optimizer.zero_grad()\n","        loss = 0; input_length = len(input_tensor); target_length = len(target_tensor)\n","        for ei in range(input_length):\n","            _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","        decoder_input = torch.tensor([[SOS_token]], device=device)\n","        decoder_hidden = encoder_hidden\n","        for di in range(target_length):\n","            decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","            loss += criterion(decoder_output, target_tensor[di].unsqueeze(0))\n","            decoder_input = target_tensor[di]\n","        loss.backward()\n","        encoder_optimizer.step(); decoder_optimizer.step()\n","\n","print(\"\\nEğitim Tamamlandı!\")\n","print(\"=\"*60)\n","\n","# --- Adım 4: Modeli Test Etme ---\n","print(\"\\n--- Adım 4: Eğitilmiş Model ile Çeviri Testi ---\")\n","def evaluate(encoder, decoder, sentence):\n","    \"\"\"Cümleyi alır, bilinmeyen kelimeleri atlar ve çeviriyi üretir.\"\"\"\n","    with torch.no_grad(): # Gradyan hesaplamayı kapat\n","        \n","        # ########### ÇÖZÜM: BU SATIR DÜZELTİLDİ ###########\n","        # List comprehension içine bir 'if' koşulu ekleyerek, sadece sözlükte\n","        # var olan kelimelerin indekslerini alıyoruz.\n","        input_words = sentence.split(' ')\n","        input_indices = [input_lang.word2index[word] for word in input_words if word in input_lang.word2index]\n","\n","        # Eğer cümledeki hiçbir kelime sözlükte yoksa, anlamlı bir mesaj döndür\n","        if not input_indices:\n","            return \"Üzgünüm, sorunuzdaki kelimeleri anlayamadım.\"\n","\n","        input_tensor = torch.LongTensor(input_indices).to(device)\n","        # ######################################################\n","        \n","        # Fonksiyonun geri kalanı aynı\n","        input_length = len(input_tensor)\n","        encoder_hidden = encoder.initHidden()\n","        for ei in range(input_length):\n","            _, encoder_hidden = encoder(input_tensor[ei], encoder_hidden)\n","            \n","        decoder_input = torch.tensor([[SOS_token]], device=device)\n","        decoder_hidden = encoder_hidden\n","        decoded_words = []\n","        \n","        for di in range(10): # Maksimum kelime sayısı\n","            decoder_output, decoder_hidden = decoder(decoder_input, decoder_hidden)\n","            topv, topi = decoder_output.data.topk(1)\n","            \n","            if topi.item() == EOS_token:\n","                decoded_words.append('<EOS>')\n","                break\n","            else:\n","                decoded_words.append(output_lang.index2word[topi.item()])\n","                \n","            decoder_input = topi.squeeze().detach()\n","            \n","        return ' '.join(decoded_words)\n","\n","# Test edelim\n","for _ in range(3):\n","    pair = random.choice(pairs)\n","    evaluate(encoder, decoder, pair[0])"]},{"cell_type":"code","execution_count":4,"id":"84eee621","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:49:01.7126Z","iopub.status.busy":"2025-07-06T08:49:01.711192Z","iopub.status.idle":"2025-07-06T08:49:01.726001Z","shell.execute_reply":"2025-07-06T08:49:01.724955Z"},"papermill":{"duration":0.024886,"end_time":"2025-07-06T08:49:01.728164","exception":false,"start_time":"2025-07-06T08:49:01.703278","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["the fast dog eats meat\n"]},{"data":{"text/plain":["'hızlı köpek et yer <EOS>'"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["print(pair[0])\n","\n","evaluate(encoder, decoder, pair[0])"]},{"cell_type":"markdown","id":"7b0b5ce3","metadata":{"papermill":{"duration":0.006753,"end_time":"2025-07-06T08:49:01.742518","exception":false,"start_time":"2025-07-06T08:49:01.735765","status":"completed"},"tags":[]},"source":["Kod Çıktısı ve Dizilim Vurgusu\n","\n","Bu kodu çalıştırdığınızda, eğitim sırasındaki ara çıktılar size sürecin ruhunu gösterecektir:\n","\n","Encoder Aşaması: Çıktıda, Encoder'ın \"the\", \"man\", \"eats\"... kelimelerini sırayla okuduğunu ve her adımda gizli durumunu (hidden state) güncellediğini göreceksiniz. Bu, RNN'in temel çalışma prensibidir. Son adımda oluşan encoder_hidden (Context Vector), artık sadece kelimelerin bir torbası değil, \"adamın elma yediği\" sıralı bilgisini içeren bir özettir.\n","\n","Decoder Aşaması: Decoder, bu sıralı bilgiyi barındıran tek bir vektörle başlar.\n","\n","İlk adımda, bu özete bakarak Türkçe cümlenin başına en uygun kelimenin \"adam\" olduğuna karar verir.\n","\n","İkinci adımda, hem özete hem de az önce ürettiği \"adam\" kelimesine bakarak bir sonraki kelimenin \"bir\" olması gerektiğine karar verir.\n","\n","Bu süreç, İngilizce'deki S-V-O (Subject-Verb-Object) yapısının, Türkçe'deki S-O-V (Subject-Object-Verb) yapısına nasıl başarıyla dönüştürüldüğünü gösterir.\n","\n","Bu örnek, Encoder-Decoder mimarisinin sadece kelimeleri çevirmekle kalmayıp, bir dilin yapısını ve dizilimini \"anlayıp\" başka bir dilin yapısına nasıl dönüştürdüğünü somut bir şekilde kanıtlar. Bu dönüşüm, Encoder'ın sıralı bilgiyi tek bir vektörde başarılı bir şekilde kodlaması sayesinde mümkün olur."]},{"cell_type":"markdown","id":"99fc9353","metadata":{"papermill":{"duration":0.007495,"end_time":"2025-07-06T08:49:01.756989","exception":false,"start_time":"2025-07-06T08:49:01.749494","status":"completed"},"tags":[]},"source":["# Sohbet Robotu ve Encoder/Decoder Etkisi"]},{"cell_type":"code","execution_count":5,"id":"812d5344","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:49:01.772935Z","iopub.status.busy":"2025-07-06T08:49:01.772622Z","iopub.status.idle":"2025-07-06T08:50:37.624025Z","shell.execute_reply":"2025-07-06T08:50:37.622795Z"},"papermill":{"duration":95.869666,"end_time":"2025-07-06T08:50:37.633593","exception":false,"start_time":"2025-07-06T08:49:01.763927","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["--- UYGULAMA: İki farklı Chatbot modelini karşılaştıracağız. ---\n","1. Basit Vektör Benzerliği Modeli (Encoder-Decoder'sız)\n","2. Encoder-Decoder Modeli\n","\n","================================================================================\n","\n","--- Model 1: Basit Benzerlik Modeli Başlatılıyor ---\n","Model 1 için kelime vektörleri (Word2Vec) eğitildi.\n","\n","[Model 1] Kullanıcı Sorusu: 'kargo ne kadar tutuyor'\n","[Model 1] En yakın bulduğu cevap: 'siparişlerim bölümünden kargo takibi yapabilirsiniz'\n","\n","[Model 1] Kullanıcı Sorusu: 'ürünümü geri vermek istiyorum'\n","[Model 1] En yakın bulduğu cevap: 'iade talebi oluşturup kargo kodu ile göndermeniz gerekir'\n","\n","Model 1'in Yorumu: Bu model sadece en benzer hazır cevabı bulup getiriyor. Yeni bir cümle üretemiyor.\n","================================================================================\n","\n","--- Model 2: Encoder-Decoder Modeli Başlatılıyor ---\n","Encoder-Decoder modeli eğitime başlıyor...\n","Eğitim tamamlandı.\n","\n","[Model 2] Kullanıcı Sorusu: 'kargo ne kadar tutuyor'\n","[Model 2] Ürettiği Cevap: 'standart kargo ücretimiz 20 tl tutarındadır'\n","\n","[Model 2] Kullanıcı Sorusu: 'ürünümü geri vermek istiyorum'\n","[Model 2] Ürettiği Cevap: 'hesabım sayfasından siparişinizi iptal edebilirsiniz'\n","\n","================================================================================\n","--- FİNAL KARŞILAŞTIRMA VE YORUM ---\n","\n","Soru: 'kargo ücreti ne kadar'\n","\n","[Model 1] Kullanıcı Sorusu: 'kargo ücreti ne kadar'\n","[Model 1] En yakın bulduğu cevap: 'iade talebi oluşturup kargo kodu ile göndermeniz gerekir'\n","\n","[Model 2] Kullanıcı Sorusu: 'kargo ücreti ne kadar'\n","[Model 2] Ürettiği Cevap: 'standart kargo ücretimiz 20 tl tutarındadır'\n","\n","Soru: 'iptal işlemi nasıl yapılır'\n","\n","[Model 1] Kullanıcı Sorusu: 'iptal işlemi nasıl yapılır'\n","[Model 1] En yakın bulduğu cevap: 'hesabım sayfasından siparişinizi iptal edebilirsiniz'\n","\n","[Model 2] Kullanıcı Sorusu: 'iptal işlemi nasıl yapılır'\n","[Model 2] Ürettiği Cevap: 'iade talebi oluşturup kargo kodu ile göndermeniz gerekir'\n","\n",">>> FARK <<<\n","Basit model, 'iptal işlemi nasıl yapılır' sorusuna en benzer bulduğu 'iade talebi...' cevabını verdi. Çünkü sadece kelime benzerliğine bakıyor.\n","Encoder-Decoder modeli ise, 'iptal' kelimesini anladı ve veri setindeki 'siparişinizi iptal edebilirsiniz' cümlesindeki yapıyı kullanarak daha doğru ve bağlama uygun bir cevap üretti.\n","Encoder-Decoder yapısının farkı, sadece kelimeleri eşleştirmek değil, cümlenin anlamını bir bütün olarak kodlayıp bu anlamdan sıfırdan yeni bir cümle üretme yeteneğidir.\n"]}],"source":["import numpy as np\n","import gensim\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import random\n","\n","# --- Ortak Veri Seti ---\n","# Müşteri hizmetleri için basit Soru-Cevap çiftleri\n","qa_pairs = [\n","    (\"ürün ne zaman kargoya verilir\", \"siparişiniz 1-3 iş günü içinde kargoya verilir\"),\n","    (\"kargo ücreti ne kadar tutuyor\", \"standart kargo ücretimiz 20 tl tutarındadır\"),\n","    (\"iade süresi kaç gün\", \"ürünü teslim aldıktan sonra 14 gün içinde iade edebilirsiniz\"),\n","    (\"nasıl iade edebilirim\", \"iade talebi oluşturup kargo kodu ile göndermeniz gerekir\"),\n","    (\"siparişi iptal etmek istiyorum\", \"hesabım sayfasından siparişinizi iptal edebilirsiniz\"),\n","    (\"kargom nerede\", \"siparişlerim bölümünden kargo takibi yapabilirsiniz\")\n","]\n","\n","print(\"--- UYGULAMA: İki farklı Chatbot modelini karşılaştıracağız. ---\")\n","print(\"1. Basit Vektör Benzerliği Modeli (Encoder-Decoder'sız)\")\n","print(\"2. Encoder-Decoder Modeli\\n\")\n","print(\"=\"*80)\n","\n","\n","# ############################################################################\n","# --- Model 1: Basit Benzerlik Modeli (Encoder-Decoder OLMADAN) ---\n","# ############################################################################\n","print(\"\\n--- Model 1: Basit Benzerlik Modeli Başlatılıyor ---\")\n","\n","# 1. Veriyi hazırlama ve bir kelime vektör modeli (Word2Vec) eğitme\n","corpus = [gensim.utils.simple_preprocess(q) for q, a in qa_pairs] + \\\n","         [gensim.utils.simple_preprocess(a) for q, a in qa_pairs]\n","w2v_model = gensim.models.Word2Vec(corpus, vector_size=100, window=2, min_count=1, workers=1)\n","print(\"Model 1 için kelime vektörleri (Word2Vec) eğitildi.\")\n","\n","def get_sentence_vector(sentence, model):\n","    \"\"\"Bir cümlenin ortalama vektörünü hesaplar.\"\"\"\n","    words = [word for word in gensim.utils.simple_preprocess(sentence) if word in model.wv]\n","    if not words:\n","        return np.zeros(model.vector_size)\n","    return np.mean(model.wv[words], axis=0)\n","\n","# 2. Hazır cevapların vektörlerini önceden hesapla\n","questions = [pair[0] for pair in qa_pairs]\n","answers = [pair[1] for pair in qa_pairs]\n","answer_vectors = np.array([get_sentence_vector(ans, w2v_model) for ans in answers])\n","\n","# 3. Basit Chatbot'un cevap verme fonksiyonu\n","def naive_chatbot_response(user_input, w2v_model, known_answers, answer_vectors):\n","    print(f\"\\n[Model 1] Kullanıcı Sorusu: '{user_input}'\")\n","    \n","    # Kullanıcı girdisinin vektörünü hesapla\n","    input_vector = get_sentence_vector(user_input, w2v_model)\n","    \n","    # Kosinüs benzerliği ile en yakın cevabı bul\n","    # (sklearn.metrics.pairwise.cosine_similarity de kullanılabilir)\n","    similarities = np.dot(answer_vectors, input_vector) / (np.linalg.norm(answer_vectors, axis=1) * np.linalg.norm(input_vector))\n","    \n","    best_answer_index = np.argmax(similarities)\n","    print(f\"[Model 1] En yakın bulduğu cevap: '{known_answers[best_answer_index]}'\")\n","    \n","# Model 1'i test edelim\n","naive_chatbot_response(\"kargo ne kadar tutuyor\", w2v_model, answers, answer_vectors)\n","naive_chatbot_response(\"ürünümü geri vermek istiyorum\", w2v_model, answers, answer_vectors)\n","\n","print(\"\\nModel 1'in Yorumu: Bu model sadece en benzer hazır cevabı bulup getiriyor. Yeni bir cümle üretemiyor.\")\n","print(\"=\"*80)\n","\n","\n","# ############################################################################\n","# --- Model 2: Encoder-Decoder Modeli ---\n","# ############################################################################\n","print(\"\\n--- Model 2: Encoder-Decoder Modeli Başlatılıyor ---\")\n","# Önceki kodumuzdaki Encoder-Decoder yapısını olduğu gibi kullanıyoruz.\n","# Sadece veri seti olarak Soru-Cevap çiftlerini veriyoruz.\n","\n","SOS_token=0; EOS_token=1; device = torch.device(\"cpu\"); hidden_size=128\n","class Lang:\n","    def __init__(self): self.word2index = {}; self.index2word = {0: \"SOS\", 1: \"EOS\"}; self.n_words = 2\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '): self.addWord(word)\n","    def addWord(self, word):\n","        if word not in self.word2index: self.word2index[word] = self.n_words; self.index2word[self.n_words] = word; self.n_words += 1\n","input_lang = Lang(); output_lang = Lang()\n","for q, a in qa_pairs: input_lang.addSentence(q); output_lang.addSentence(a)\n","\n","class EncoderRNN(nn.Module):\n","    def __init__(self, i, h): super(EncoderRNN, self).__init__(); self.h=h; self.emb=nn.Embedding(i,h); self.gru=nn.GRU(h,h)\n","    def forward(self, inp, hid): emb=self.emb(inp).view(1,1,-1); out,hid=self.gru(emb,hid); return out,hid\n","    def initHidden(self): return torch.zeros(1, 1, self.h, device=device)\n","class DecoderRNN(nn.Module):\n","    def __init__(self, h, o): super(DecoderRNN, self).__init__(); self.h=h; self.emb=nn.Embedding(o,h); self.gru=nn.GRU(h,h); self.out=nn.Linear(h,o); self.softmax=nn.LogSoftmax(dim=1)\n","    def forward(self, inp, hid): out=self.emb(inp).view(1,1,-1); out=torch.relu(out); out,hid=self.gru(out,hid); out=self.softmax(self.out(out[0])); return out,hid\n","\n","def train(inp_t, tar_t, enc, dec, enc_opt, dec_opt, crit):\n","    enc_h=enc.initHidden(); enc_opt.zero_grad(); dec_opt.zero_grad(); loss=0\n","    for ei in range(len(inp_t)): _, enc_h = enc(inp_t[ei], enc_h)\n","    dec_i=torch.tensor([[SOS_token]], device=device); dec_h=enc_h\n","    for di in range(len(tar_t)):\n","        dec_o, dec_h = dec(dec_i, dec_h); loss+=crit(dec_o, tar_t[di].unsqueeze(0)); dec_i=tar_t[di]\n","    loss.backward(); enc_opt.step(); dec_opt.step()\n","    return loss.item() / len(tar_t)\n","\n","encoder = EncoderRNN(input_lang.n_words, hidden_size).to(device)\n","decoder = DecoderRNN(hidden_size, output_lang.n_words).to(device)\n","encoder_optimizer = optim.SGD(encoder.parameters(), lr=0.01)\n","decoder_optimizer = optim.SGD(decoder.parameters(), lr=0.01)\n","criterion = nn.NLLLoss()\n","\n","print(\"Encoder-Decoder modeli eğitime başlıyor...\")\n","for i in range(5000): # Eğitim\n","    pair = random.choice(qa_pairs)\n","    inp_t = torch.LongTensor([input_lang.word2index[s] for s in pair[0].split(' ')]).to(device)\n","    tar_t = torch.LongTensor([output_lang.word2index[s] for s in pair[1].split(' ')] + [EOS_token]).to(device)\n","    train(inp_t, tar_t, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion)\n","print(\"Eğitim tamamlandı.\")\n","\n","def ed_chatbot_response(sentence, encoder, decoder):\n","    print(f\"\\n[Model 2] Kullanıcı Sorusu: '{sentence}'\")\n","    with torch.no_grad():\n","        #inp_t=torch.LongTensor([input_lang.word2index[s] for s in sentence.split(' ')]).to(device)\n","        input_words = sentence.split(' ')\n","        input_indices = [input_lang.word2index[word] for word in input_words if word in input_lang.word2index]\n","        \n","        # Cümledeki hiçbir kelimeyi tanımıyorsak...\n","        if not input_indices:\n","            print(f\"[Model 2] Üzgünüm, sorunuzdaki kelimeleri anlayamadım.\")\n","            return\n","        \n","        inp_t = torch.LongTensor(input_indices).to(device)\n","        enc_h=encoder.initHidden()\n","        for ei in range(len(inp_t)): _, enc_h = encoder(inp_t[ei], enc_h)\n","        dec_i=torch.tensor([[SOS_token]], device=device); dec_h=enc_h\n","        decoded_words = []\n","        for di in range(15):\n","            dec_o, dec_h = decoder(dec_i, dec_h); _, topi = dec_o.data.topk(1)\n","            if topi.item() == EOS_token: break\n","            else: decoded_words.append(output_lang.index2word[topi.item()])\n","            dec_i = topi.squeeze().detach()\n","        response = ' '.join(decoded_words)\n","        print(f\"[Model 2] Ürettiği Cevap: '{response}'\")\n","\n","# Model 2'yi aynı sorularla test edelim\n","ed_chatbot_response(\"kargo ne kadar tutuyor\", encoder, decoder)\n","ed_chatbot_response(\"ürünümü geri vermek istiyorum\", encoder, decoder)\n","\n","\n","# --- FİNAL KARŞILAŞTIRMA ---\n","print(\"\\n\" + \"=\"*80)\n","print(\"--- FİNAL KARŞILAŞTIRMA VE YORUM ---\")\n","print(\"\\nSoru: 'kargo ücreti ne kadar'\")\n","naive_chatbot_response(\"kargo ücreti ne kadar\", w2v_model, answers, answer_vectors)\n","ed_chatbot_response(\"kargo ücreti ne kadar\", encoder, decoder)\n","\n","print(\"\\nSoru: 'iptal işlemi nasıl yapılır'\") # Veri setinde olmayan bir soru\n","naive_chatbot_response(\"iptal işlemi nasıl yapılır\", w2v_model, answers, answer_vectors)\n","ed_chatbot_response(\"iptal işlemi nasıl yapılır\", encoder, decoder)\n","\n","print(\"\\n>>> FARK <<<\")\n","print(\"Basit model, 'iptal işlemi nasıl yapılır' sorusuna en benzer bulduğu 'iade talebi...' cevabını verdi. Çünkü sadece kelime benzerliğine bakıyor.\")\n","print(\"Encoder-Decoder modeli ise, 'iptal' kelimesini anladı ve veri setindeki 'siparişinizi iptal edebilirsiniz' cümlesindeki yapıyı kullanarak daha doğru ve bağlama uygun bir cevap üretti.\")\n","print(\"Encoder-Decoder yapısının farkı, sadece kelimeleri eşleştirmek değil, cümlenin anlamını bir bütün olarak kodlayıp bu anlamdan sıfırdan yeni bir cümle üretme yeteneğidir.\")"]},{"cell_type":"code","execution_count":6,"id":"155b3c4a","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:50:37.650687Z","iopub.status.busy":"2025-07-06T08:50:37.649291Z","iopub.status.idle":"2025-07-06T08:50:37.655412Z","shell.execute_reply":"2025-07-06T08:50:37.654274Z"},"papermill":{"duration":0.01638,"end_time":"2025-07-06T08:50:37.657371","exception":false,"start_time":"2025-07-06T08:50:37.640991","status":"completed"},"tags":[]},"outputs":[],"source":["qa_pairs = [\n","    (\"ürün ne zaman kargoya verilir\", \"siparişiniz 1-3 iş günü içinde kargoya verilir\"),\n","    (\"kargo ücreti ne kadar tutuyor\", \"standart kargo ücretimiz 20 tl tutarındadır\"),\n","    (\"iade süresi kaç gün\", \"ürünü teslim aldıktan sonra 14 gün içinde iade edebilirsiniz\"),\n","    (\"nasıl iade edebilirim\", \"iade talebi oluşturup kargo kodu ile göndermeniz gerekir\"),\n","    (\"siparişi iptal etmek istiyorum\", \"hesabım sayfasından siparişinizi iptal edebilirsiniz\"),\n","    (\"kargom nerede\", \"siparişlerim bölümünden kargo takibi yapabilirsiniz\")\n","]"]},{"cell_type":"code","execution_count":7,"id":"deb62707","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:50:37.673203Z","iopub.status.busy":"2025-07-06T08:50:37.672888Z","iopub.status.idle":"2025-07-06T08:50:37.685246Z","shell.execute_reply":"2025-07-06T08:50:37.684406Z"},"papermill":{"duration":0.02197,"end_time":"2025-07-06T08:50:37.686627","exception":false,"start_time":"2025-07-06T08:50:37.664657","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","[Model 2] Kullanıcı Sorusu: 'turkcell'\n","[Model 2] Üzgünüm, sorunuzdaki kelimeleri anlayamadım.\n","\n","[Model 2] Kullanıcı Sorusu: 'turkcell ne kadar'\n","[Model 2] Ürettiği Cevap: 'standart kargo ücretimiz 20 tl tutarındadır'\n","\n","[Model 2] Kullanıcı Sorusu: 'paketimi iptal etmek istiyorum'\n","[Model 2] Ürettiği Cevap: 'hesabım sayfasından siparişinizi iptal edebilirsiniz'\n"]}],"source":["ed_chatbot_response(\"turkcell\", encoder, decoder)\n","ed_chatbot_response(\"turkcell ne kadar\", encoder, decoder)\n","ed_chatbot_response(\"paketimi iptal etmek istiyorum\", encoder, decoder)"]},{"cell_type":"markdown","id":"f45b6aa2","metadata":{"papermill":{"duration":0.006618,"end_time":"2025-07-06T08:50:37.700248","exception":false,"start_time":"2025-07-06T08:50:37.69363","status":"completed"},"tags":[]},"source":[" (\"ürün ne zaman kargoya verilir\", \"siparişiniz 1-3 iş günü içinde kargoya verilir\"),\n","    (\"kargo ücreti ne kadar tutuyor\", \"standart kargo ücretimiz 20 tl tutarındadır\"),\n","    (\"iade süresi kaç gün\", \"ürünü teslim aldıktan sonra 14 gün içinde iade edebilirsiniz\"),\n","    (\"nasıl iade edebilirim\", \"iade talebi oluşturup kargo kodu ile göndermeniz gerekir\"),\n","    (\"siparişi iptal etmek istiyorum\", \"hesabım sayfasından siparişinizi iptal edebilirsiniz\"),\n","    (\"kargom nerede\", \"siparişlerim bölümünden kargo takibi yapabilirsiniz\")"]},{"cell_type":"markdown","id":"c4f02097","metadata":{"papermill":{"duration":0.006872,"end_time":"2025-07-06T08:50:37.713967","exception":false,"start_time":"2025-07-06T08:50:37.707095","status":"completed"},"tags":[]},"source":["**Kod Çıktısı ve Yorumu**\n","\n","Bu kodu çalıştırdığınızda göreceğiniz fark çok nettir:\n","\n","Bilinen Sorulara Yakın Sorular:\n","\n","* Model 1 (Basit): \"kargo ne kadar tutuyor\" sorusu, veri setindeki \"kargo ücreti ne kadar\" sorusuna çok benzediği için doğru cevabı (\"standart kargo ücretimiz...\") bulup getirecektir. Bu, basit benzerlik aramasıdır.\n","\n","* Model 2 (Encoder-Decoder): Bu soruya yine doğru cevabı üretecektir, ancak bunu cevabı bir yerden kopyalayarak değil, \"kargo\" ve \"ne kadar\" kelimelerini anlayıp, öğrendiği kalıplara göre kelime kelime (standart -> kargo -> ücretimiz -> ...) inşa ederek yapacaktır.\n","\n","Bilinmeyen Ama Anlamı Yakın Sorular (Asıl Test):\n","\n","* Model 1 (Basit): \"iptal işlemi nasıl yapılır\" gibi veri setinde olmayan bir soru sorduğunuzda, bu modelin kafası karışacaktır. Vektörel olarak en çok benzediğini düşündüğü, belki de içinde \"nasıl\" geçen \"iade talebi oluşturup...\" gibi alakasız bir hazır cevabı seçecektir. Çünkü onun için \"iptal\" kelimesinin anlamından çok, cümlenin genel vektörünün hangi hazır cevabın vektörüne yakın olduğu önemlidir.\n","\n","* Model 2 (Encoder-Decoder): Bu model ise, Encoder sayesinde \"iptal işlemi nasıl yapılır\" cümlesindeki \"iptal\" ve \"nasıl\" anahtar kavramlarını anlayıp bir anlam vektörüne kodlar. Decoder, bu anlam vektörünü aldığında, eğitim verisinden öğrendiği \"iptal\" ile ilgili en olası yapının \"hesabım sayfasından siparişinizi iptal edebilirsiniz\" olduğunu bilir ve bu yapıya uygun yeni bir cümle üretir. Çıktısı, basit modelin aksine çok daha doğru ve bağlama uygun olacaktır.\n","\n","Özetle fark şudur: Basit model bir kütüphanecidir, siz bir kitap adı söylediğinizde raftaki en benzer isimli kitabı bulup getirir. Encoder-Decoder ise bir yazardır, siz ona bir fikir verdiğinizde o fikri anlar ve o fikir hakkında sıfırdan yeni bir metin yazar. İşte bu üretken (generative) yetenek, Encoder-Decoder mimarisinin en büyük gücüdür."]},{"cell_type":"markdown","id":"7b522035","metadata":{"papermill":{"duration":0.006924,"end_time":"2025-07-06T08:50:37.727988","exception":false,"start_time":"2025-07-06T08:50:37.721064","status":"completed"},"tags":[]},"source":["#  UNK Token Kullanımı"]},{"cell_type":"code","execution_count":8,"id":"5f92414e","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:50:37.744453Z","iopub.status.busy":"2025-07-06T08:50:37.744032Z","iopub.status.idle":"2025-07-06T08:51:36.244843Z","shell.execute_reply":"2025-07-06T08:51:36.243665Z"},"papermill":{"duration":58.519422,"end_time":"2025-07-06T08:51:36.254473","exception":false,"start_time":"2025-07-06T08:50:37.735051","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["--- UYGULAMA: İki farklı Chatbot modelini karşılaştıracağız. ---\n","1. Basit Vektör Benzerliği Modeli (Encoder-Decoder'sız)\n","2. Encoder-Decoder Modeli (OOV Problemi için <UNK> Token ile Güçlendirildi)\n","\n","================================================================================\n","\n","--- Model 1: Basit Benzerlik Modeli Başlatılıyor ---\n","Model 1 için kelime vektörleri (Word2Vec) eğitildi.\n","================================================================================\n","\n","--- Model 2: Encoder-Decoder Modeli Başlatılıyor ---\n","Encoder-Decoder modeli eğitime başlıyor...\n","Eğitim tamamlandı.\n","\n","================================================================================\n","--- FİNAL KARŞILAŞTIRMA VE YORUM ---\n","\n","Test Edilen Soru: 'iade iadesi nasıl yapılıyor'\n","\n","\n","[Model 1] Kullanıcı Sorusu: 'iade iadesi nasıl yapılıyor'\n","[Model 1] En yakın bulduğu cevap: 'ürünü teslim aldıktan sonra 14 gün içinde iade edebilirsiniz'\n","\n","[Model 2] Kullanıcı Sorusu: 'iade iadesi nasıl yapılıyor'\n","[Model 2] Ürettiği Cevap: 'iade talebi oluşturup kargo kodu ile göndermeniz gerekir'\n","\n",">>> FARK <<<\n","Basit model, bilinmeyen kelimeleri atlayarak en benzer cümleyi bulmaya çalıştı.\n","Encoder-Decoder modeli ise, bilinmeyen 'iadesi' ve 'yapılıyor' kelimelerini <UNK> olarak işledi.\n","Ancak cümlenin geri kalanındaki 'iade' ve 'nasıl' kelimelerini anladığı için doğru bağlamdaki cevabı ('iade talebi...') üretebildi. Bu, çok daha sağlam bir yöntemdir.\n"]}],"source":["import numpy as np\n","import gensim\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import random\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","# --- Ortak Veri Seti ---\n","qa_pairs = [\n","    (\"ürün ne zaman kargoya verilir\", \"siparişiniz 1-3 iş günü içinde kargoya verilir\"),\n","    (\"kargo ücreti ne kadar tutuyor\", \"standart kargo ücretimiz 20 tl tutarındadır\"),\n","    (\"iade süresi kaç gün\", \"ürünü teslim aldıktan sonra 14 gün içinde iade edebilirsiniz\"),\n","    (\"nasıl iade edebilirim\", \"iade talebi oluşturup kargo kodu ile göndermeniz gerekir\"),\n","    (\"siparişi iptal etmek istiyorum\", \"hesabım sayfasından siparişinizi iptal edebilirsiniz\"),\n","    (\"kargom nerede\", \"siparişlerim bölümünden kargo takibi yapabilirsiniz\"),\n","    (\"turkcell ile bağlan hayata\",\"turkcell ürünlerini turkcell.com.tr adresinden inceleyebilirsiniz\"),\n","    (\"kurt koyun yedi\", \"ilk ihtimal\"),\n","    (\"koyun kurt yedi\", \"ikinci ihtimal\")\n","]\n","\n","print(\"--- UYGULAMA: İki farklı Chatbot modelini karşılaştıracağız. ---\")\n","print(\"1. Basit Vektör Benzerliği Modeli (Encoder-Decoder'sız)\")\n","print(\"2. Encoder-Decoder Modeli (OOV Problemi için <UNK> Token ile Güçlendirildi)\\n\")\n","print(\"=\"*80)\n","\n","\n","# ############################################################################\n","# --- Model 1: Basit Benzerlik Modeli (Değişiklik yok) ---\n","# ############################################################################\n","print(\"\\n--- Model 1: Basit Benzerlik Modeli Başlatılıyor ---\")\n","# Bu modeldeki get_sentence_vector fonksiyonu zaten bilinmeyen kelimeleri atladığı için\n","# çökme yaşamaz, bu yüzden burada bir değişiklik yapmıyoruz.\n","corpus = [gensim.utils.simple_preprocess(q) for q, a in qa_pairs] + \\\n","         [gensim.utils.simple_preprocess(a) for q, a in qa_pairs]\n","w2v_model = gensim.models.Word2Vec(corpus, vector_size=100, window=2, min_count=1, workers=1)\n","print(\"Model 1 için kelime vektörleri (Word2Vec) eğitildi.\")\n","def get_sentence_vector(sentence, model):\n","    words = [word for word in gensim.utils.simple_preprocess(sentence) if word in model.wv]\n","    if not words: return np.zeros(model.vector_size)\n","    return np.mean(model.wv[words], axis=0)\n","questions = [pair[0] for pair in qa_pairs]; answers = [pair[1] for pair in qa_pairs]\n","answer_vectors = np.array([get_sentence_vector(ans, w2v_model) for ans in answers])\n","def naive_chatbot_response(user_input, w2v_model, known_answers, answer_vectors):\n","    print(f\"\\n[Model 1] Kullanıcı Sorusu: '{user_input}'\")\n","    input_vector = get_sentence_vector(user_input, w2v_model)\n","    if np.all(input_vector == 0):\n","        print(\"[Model 1] Sorunuzdaki kelimeleri anlayamadım.\")\n","        return\n","    similarities = np.dot(answer_vectors, input_vector) / (np.linalg.norm(answer_vectors, axis=1) * np.linalg.norm(input_vector))\n","    best_answer_index = np.argmax(similarities)\n","    print(f\"[Model 1] En yakın bulduğu cevap: '{known_answers[best_answer_index]}'\")\n","print(\"=\"*80)\n","\n","\n","# ############################################################################\n","# --- Model 2: Encoder-Decoder Modeli (<UNK> Token ile Düzeltildi) ---\n","# ############################################################################\n","print(\"\\n--- Model 2: Encoder-Decoder Modeli Başlatılıyor ---\")\n","\n","SOS_token=0; EOS_token=1; UNK_token = 2 # <-- YENİ: UNK Token'ı tanımlandı\n","device = torch.device(\"cpu\"); hidden_size=128\n","\n","class Lang:\n","    def __init__(self):\n","        self.word2index = {}\n","        # YENİ: UNK token'ı sözlüğe eklendi\n","        self.index2word = {SOS_token: \"SOS\", EOS_token: \"EOS\", UNK_token: \"<UNK>\"}\n","        self.n_words = 3 # SOS, EOS ve UNK ile başla\n","\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '): self.addWord(word)\n","\n","    def addWord(self, word):\n","        if word not in self.word2index:\n","            self.word2index[word] = self.n_words\n","            self.index2word[self.n_words] = word\n","            self.n_words += 1\n","\n","# Veri setini oluştur\n","input_lang = Lang(); output_lang = Lang()\n","for q, a in qa_pairs: input_lang.addSentence(q); output_lang.addSentence(a)\n","\n","# YENİ: Tensör oluşturma fonksiyonları <UNK> token'ını kullanacak şekilde güncellendi\n","def sentence_to_tensor(lang, sentence):\n","    indexes = [lang.word2index.get(word, UNK_token) for word in sentence.split(' ')]\n","    return torch.LongTensor(indexes).to(device)\n","\n","def pair_to_tensors(pair):\n","    input_tensor = sentence_to_tensor(input_lang, pair[0])\n","    target_tensor = sentence_to_tensor(output_lang, pair[1])\n","    target_tensor = torch.cat((target_tensor, torch.LongTensor([EOS_token]).to(device)))\n","    return (input_tensor, target_tensor)\n","\n","# Modeller (Değişiklik yok)\n","class EncoderRNN(nn.Module):\n","    def __init__(self, i, h): super(EncoderRNN, self).__init__(); self.h=h; self.emb=nn.Embedding(i,h); self.gru=nn.GRU(h,h)\n","    def forward(self, inp, hid): emb=self.emb(inp).view(1,1,-1); out,hid=self.gru(emb,hid); return out,hid\n","    def initHidden(self): return torch.zeros(1, 1, self.h, device=device)\n","class DecoderRNN(nn.Module):\n","    def __init__(self, h, o): super(DecoderRNN, self).__init__(); self.h=h; self.emb=nn.Embedding(o,h); self.gru=nn.GRU(h,h); self.out=nn.Linear(h,o); self.softmax=nn.LogSoftmax(dim=1)\n","    def forward(self, inp, hid): out=self.emb(inp).view(1,1,-1); out=torch.relu(out); out,hid=self.gru(out,hid); out=self.softmax(self.out(out[0])); return out,hid\n","\n","# Eğitim fonksiyonu (Değişiklik yok)\n","def train(inp_t, tar_t, enc, dec, enc_opt, dec_opt, crit):\n","    enc_h=enc.initHidden(); enc_opt.zero_grad(); dec_opt.zero_grad(); loss=0\n","    for ei in range(len(inp_t)): _, enc_h = enc(inp_t[ei], enc_h)\n","    dec_i=torch.tensor([[SOS_token]], device=device); dec_h=enc_h\n","    for di in range(len(tar_t)):\n","        dec_o, dec_h = dec(dec_i, dec_h); loss+=crit(dec_o, tar_t[di].unsqueeze(0)); dec_i=tar_t[di]\n","    loss.backward(); enc_opt.step(); dec_opt.step()\n","\n","# Eğitim\n","encoder = EncoderRNN(input_lang.n_words, hidden_size).to(device)\n","decoder = DecoderRNN(hidden_size, output_lang.n_words).to(device)\n","encoder_optimizer = optim.SGD(encoder.parameters(), lr=0.01)\n","decoder_optimizer = optim.SGD(decoder.parameters(), lr=0.01)\n","criterion = nn.NLLLoss()\n","\n","print(\"Encoder-Decoder modeli eğitime başlıyor...\")\n","for i in range(5000):\n","    pair = random.choice(qa_pairs)\n","    input_tensor, target_tensor = pair_to_tensors(pair)\n","    train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion)\n","print(\"Eğitim tamamlandı.\")\n","\n","# Test fonksiyonu (Artık <UNK> kullanıyor)\n","def ed_chatbot_response(sentence, encoder, decoder):\n","    print(f\"\\n[Model 2] Kullanıcı Sorusu: '{sentence}'\")\n","    with torch.no_grad():\n","        input_tensor = sentence_to_tensor(input_lang, sentence)\n","        enc_h=encoder.initHidden()\n","        for ei in range(len(input_tensor)): _, enc_h = encoder(input_tensor[ei], enc_h)\n","        dec_i=torch.tensor([[SOS_token]], device=device); dec_h=enc_h\n","        decoded_words = []\n","        for di in range(15):\n","            dec_o, dec_h = decoder(dec_i, dec_h); _, topi = dec_o.data.topk(1)\n","            if topi.item() == EOS_token: break\n","            # <UNK> token'ı üretirse bunu atlayabiliriz veya gösterebiliriz\n","            if topi.item() == UNK_token:\n","                decoded_words.append(\"<BILINMIYOR>\")\n","            else:\n","                decoded_words.append(output_lang.index2word[topi.item()])\n","            dec_i = topi.squeeze().detach()\n","        response = ' '.join(decoded_words)\n","        print(f\"[Model 2] Ürettiği Cevap: '{response}'\")\n","\n","# --- FİNAL KARŞILAŞTIRMA ---\n","print(\"\\n\" + \"=\"*80)\n","print(\"--- FİNAL KARŞILAŞTIRMA VE YORUM ---\")\n","\n","# Test cümlesi (Bilinmeyen kelimeler içeriyor: 'iadesi' ve 'yapılıyor')\n","test_cumlesi = \"iade iadesi nasıl yapılıyor\"\n","print(f\"\\nTest Edilen Soru: '{test_cumlesi}'\\n\")\n","\n","# Model 1'in cevabı\n","naive_chatbot_response(test_cumlesi, w2v_model, answers, answer_vectors)\n","\n","# Model 2'nin cevabı\n","ed_chatbot_response(test_cumlesi, encoder, decoder)\n","\n","print(\"\\n>>> FARK <<<\")\n","print(\"Basit model, bilinmeyen kelimeleri atlayarak en benzer cümleyi bulmaya çalıştı.\")\n","print(\"Encoder-Decoder modeli ise, bilinmeyen 'iadesi' ve 'yapılıyor' kelimelerini <UNK> olarak işledi.\")\n","print(\"Ancak cümlenin geri kalanındaki 'iade' ve 'nasıl' kelimelerini anladığı için doğru bağlamdaki cevabı ('iade talebi...') üretebildi. Bu, çok daha sağlam bir yöntemdir.\")"]},{"cell_type":"code","execution_count":9,"id":"e1074450","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:51:36.271092Z","iopub.status.busy":"2025-07-06T08:51:36.270736Z","iopub.status.idle":"2025-07-06T08:51:36.285824Z","shell.execute_reply":"2025-07-06T08:51:36.284424Z"},"papermill":{"duration":0.025717,"end_time":"2025-07-06T08:51:36.287782","exception":false,"start_time":"2025-07-06T08:51:36.262065","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Test Edilen Soru: 'kurt koyun oynadı'\n","\n","\n","[Model 1] Kullanıcı Sorusu: 'kurt koyun oynadı'\n","[Model 1] En yakın bulduğu cevap: 'hesabım sayfasından siparişinizi iptal edebilirsiniz'\n","\n","[Model 2] Kullanıcı Sorusu: 'kurt koyun oynadı'\n","[Model 2] Ürettiği Cevap: 'ilk ihtimal'\n","\n","Test Edilen Soru: 'koyun kurt oynadı'\n","\n","\n","[Model 1] Kullanıcı Sorusu: 'koyun kurt oynadı'\n","[Model 1] En yakın bulduğu cevap: 'hesabım sayfasından siparişinizi iptal edebilirsiniz'\n","\n","[Model 2] Kullanıcı Sorusu: 'koyun kurt oynadı'\n","[Model 2] Ürettiği Cevap: 'ikinci ihtimal'\n"]}],"source":["# Test cümlesi (Bilinmeyen kelimeler içeriyor: 'iadesi' ve 'yapılıyor')\n","test_cumlesi = \"kurt koyun oynadı\"\n","print(f\"\\nTest Edilen Soru: '{test_cumlesi}'\\n\")\n","\n","# Model 1'in cevabı\n","naive_chatbot_response(test_cumlesi, w2v_model, answers, answer_vectors)\n","\n","# Model 2'nin cevabı\n","ed_chatbot_response(test_cumlesi, encoder, decoder)\n","\n","# Test cümlesi (Bilinmeyen kelimeler içeriyor: 'iadesi' ve 'yapılıyor')\n","test_cumlesi = \"koyun kurt oynadı\"\n","print(f\"\\nTest Edilen Soru: '{test_cumlesi}'\\n\")\n","\n","# Model 1'in cevabı\n","naive_chatbot_response(test_cumlesi, w2v_model, answers, answer_vectors)\n","\n","# Model 2'nin cevabı\n","ed_chatbot_response(test_cumlesi, encoder, decoder)"]},{"cell_type":"markdown","id":"a2f98720","metadata":{"papermill":{"duration":0.007546,"end_time":"2025-07-06T08:51:36.304022","exception":false,"start_time":"2025-07-06T08:51:36.296476","status":"completed"},"tags":[]},"source":["# Cümle Üretimi"]},{"cell_type":"code","execution_count":10,"id":"d62e47f4","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:51:36.320507Z","iopub.status.busy":"2025-07-06T08:51:36.320113Z","iopub.status.idle":"2025-07-06T08:53:41.712089Z","shell.execute_reply":"2025-07-06T08:53:41.710878Z"},"papermill":{"duration":125.409978,"end_time":"2025-07-06T08:53:41.721279","exception":false,"start_time":"2025-07-06T08:51:36.311301","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["--- Adım 1: Veri Hazırlığı (<UNK> Token ile Güçlendirildi) ---\n","Veri seti ve <UNK> destekli sözlükler oluşturuldu.\n","\n","============================================================\n","\n","--- Adım 2: Encoder ve Decoder Modelleri ---\n","\n","--- Adım 3: Modelin Cümle Yapısını Öğrenmesi ---\n","10000 iterasyonluk eğitim başlıyor...\n","Eğitim tamamlandı.\n","============================================================\n","\n","--- Adım 4: Hata Ayıklanmış Modelin Test Edilmesi ---\n","\n",">>> Girdi Cümlesi: 'he is a doctor'\n","Modelin Adım Adım Ürettiği Çıktı:\n","   -> Adım 1: 'is' üretildi.\n","   -> Adım 2: 'he' üretildi.\n","   -> Adım 3: 'a' üretildi.\n","   -> Adım 4: 'doctor' üretildi.\n","\n",">>> Girdi Cümlesi: 'the dog is happy'\n","Modelin Adım Adım Ürettiği Çıktı:\n","   -> Adım 1: 'is' üretildi.\n","   -> Adım 2: 'the' üretildi.\n","   -> Adım 3: 'cat' üretildi.\n","   -> Adım 4: 'black' üretildi.\n","\n",">>> Girdi Cümlesi: 'we are teachers'\n","Modelin Adım Adım Ürettiği Çıktı:\n","   -> Adım 1: 'are' üretildi.\n","   -> Adım 2: 'you' üretildi.\n","   -> Adım 3: 'a' üretildi.\n","   -> Adım 4: 'student' üretildi.\n"]},{"data":{"text/plain":["'are you a student <EOS>'"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import random\n","\n","# --- Adım 1: Veri Seti ve Geliştirilmiş Lang Sınıfı ---\n","print(\"--- Adım 1: Veri Hazırlığı (<UNK> Token ile Güçlendirildi) ---\")\n","\n","SOS_token = 0  # Start of Sentence\n","EOS_token = 1  # End of Sentence\n","UNK_token = 2  # YENİ: Unknown token tanımlandı\n","\n","pairs = [\n","    (\"you are a student\", \"are you a student\"),\n","    (\"he is a doctor\", \"is he a doctor\"),\n","    (\"they are engineers\", \"are they engineers\"),\n","    (\"the cat is black\", \"is the cat black\"),\n","    (\"we can go now\", \"can we go now\"),\n","    (\"she will be here\", \"will she be here\"),\n","    (\"this is my book\", \"is this my book\"),\n","    (\"you are happy\", \"are you happy\")\n","]\n","\n","# DÜZELTME: Lang sınıfı artık UNK token'ını içeriyor\n","class Lang:\n","    def __init__(self):\n","        self.word2index = {}\n","        self.index2word = {SOS_token: \"SOS\", EOS_token: \"EOS\", UNK_token: \"<UNK>\"}\n","        self.n_words = 3  # SOS, EOS ve UNK ile başla\n","\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '): self.addWord(word)\n","\n","    def addWord(self, word):\n","        if word not in self.word2index:\n","            self.word2index[word] = self.n_words\n","            self.index2word[self.n_words] = word\n","            self.n_words += 1\n","\n","input_lang = Lang(); output_lang = Lang()\n","for pair in pairs: input_lang.addSentence(pair[0]); output_lang.addSentence(pair[1])\n","\n","# DÜZELTME: Bu fonksiyon artık bilinmeyen kelimelerle başa çıkabiliyor\n","def sentence_to_tensor(lang, sentence):\n","    \"\"\"Bir cümleyi, OOV kelimeler için UNK token'ı kullanarak tensöre çevirir.\"\"\"\n","    indexes = [lang.word2index.get(word, UNK_token) for word in sentence.split(' ')]\n","    indexes.append(EOS_token)\n","    return torch.LongTensor(indexes)\n","\n","print(\"Veri seti ve <UNK> destekli sözlükler oluşturuldu.\\n\")\n","print(\"=\"*60)\n","\n","# --- Adım 2: Encoder-Decoder Modelleri (Yapısal Değişiklik Yok) ---\n","print(\"\\n--- Adım 2: Encoder ve Decoder Modelleri ---\")\n","device = torch.device(\"cpu\"); hidden_size = 128\n","class EncoderRNN(nn.Module):\n","    def __init__(self, i, h): super(EncoderRNN, self).__init__(); self.emb=nn.Embedding(i,h); self.gru=nn.GRU(h,h)\n","    def forward(self, inp, hid): emb=self.emb(inp).view(1,1,-1); _,hid=self.gru(emb,hid); return hid\n","    def initHidden(self): return torch.zeros(1, 1, hidden_size, device=device)\n","class DecoderRNN(nn.Module):\n","    def __init__(self, h, o): super(DecoderRNN, self).__init__(); self.emb=nn.Embedding(o,h); self.gru=nn.GRU(h,h); self.out=nn.Linear(h,o); self.softmax=nn.LogSoftmax(dim=1)\n","    def forward(self, inp, hid): out=self.emb(inp).view(1,1,-1); out=torch.relu(out); out,hid=self.gru(out,hid); out=self.softmax(self.out(out[0])); return out,hid\n","\n","# --- Adım 3: Eğitim (Değişiklik yok, ama artık UNK token'ını da öğrenebilir) ---\n","print(\"\\n--- Adım 3: Modelin Cümle Yapısını Öğrenmesi ---\")\n","\n","def train(inp_t, tar_t, encoder, decoder, enc_opt, dec_opt, criterion):\n","    enc_h = encoder.initHidden()\n","    enc_opt.zero_grad(); dec_opt.zero_grad()\n","    loss = 0\n","    for ei in range(len(inp_t)):\n","        enc_h = encoder(inp_t[ei].unsqueeze(0), enc_h)\n","    \n","    dec_i = torch.tensor([[SOS_token]], device=device)\n","    dec_h = enc_h\n","    \n","    for di in range(len(tar_t)):\n","        dec_o, dec_h = decoder(dec_i, dec_h)\n","        loss += criterion(dec_o, tar_t[di].unsqueeze(0))\n","        dec_i = tar_t[di]\n","        if dec_i.item() == EOS_token: break\n","            \n","    loss.backward()\n","    enc_opt.step(); dec_opt.step()\n","\n","encoder = EncoderRNN(input_lang.n_words, hidden_size).to(device)\n","decoder = DecoderRNN(hidden_size, output_lang.n_words).to(device)\n","encoder_optimizer = optim.Adam(encoder.parameters(), lr=0.001)\n","decoder_optimizer = optim.Adam(decoder.parameters(), lr=0.001)\n","criterion = nn.NLLLoss()\n","\n","n_iters = 10000\n","print(f\"{n_iters} iterasyonluk eğitim başlıyor...\")\n","\n","for iter in range(1, n_iters + 1):\n","    pair = random.choice(pairs)\n","    input_tensor = sentence_to_tensor(input_lang, pair[0])\n","    target_tensor = sentence_to_tensor(output_lang, pair[1])\n","    train(input_tensor, target_tensor, encoder, decoder, encoder_optimizer, decoder_optimizer, criterion)\n","\n","print(\"Eğitim tamamlandı.\")\n","print(\"=\"*60)\n","\n","# --- Adım 4: Cümle Kuran Modeli Test Etme ---\n","print(\"\\n--- Adım 4: Hata Ayıklanmış Modelin Test Edilmesi ---\")\n","\n","def generate_question(sentence, encoder, decoder):\n","    print(f\"\\n>>> Girdi Cümlesi: '{sentence}'\")\n","    with torch.no_grad():\n","        # Düzeltilmiş fonksiyonumuz sayesinde bu satır artık çökmeyecek\n","        input_tensor = sentence_to_tensor(input_lang, sentence)\n","        \n","        enc_h = encoder.initHidden()\n","        for ei in range(len(input_tensor)):\n","            enc_h = encoder(input_tensor[ei].unsqueeze(0), enc_h)\n","\n","        dec_i = torch.tensor([[SOS_token]], device=device)\n","        dec_h = enc_h\n","        decoded_words = []\n","        \n","        print(\"Modelin Adım Adım Ürettiği Çıktı:\")\n","        for di in range(10):\n","            dec_o, dec_h = decoder(dec_i, dec_h)\n","            _, topi = dec_o.data.topk(1)\n","            dec_i = topi.squeeze().detach().unsqueeze(0)\n","            \n","            if topi.item() == EOS_token:\n","                decoded_words.append('<EOS>')\n","                break\n","            else:\n","                word = output_lang.index2word[topi.item()]\n","                decoded_words.append(word)\n","                print(f\"   -> Adım {di+1}: '{word}' üretildi.\")\n","\n","        return ' '.join(decoded_words)\n","\n","# Eğitim verisinden bir örnekle test\n","generate_question(\"he is a doctor\", encoder, decoder)\n","\n","# HATA VEREN CÜMLEYİ TEKRAR TEST ETME\n","generate_question(\"the dog is happy\", encoder, decoder)\n","\n","# Başka bir bilinmeyen kelime içeren cümle\n","generate_question(\"we are teachers\", encoder, decoder)"]},{"cell_type":"code","execution_count":11,"id":"738b3031","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:53:41.738313Z","iopub.status.busy":"2025-07-06T08:53:41.737999Z","iopub.status.idle":"2025-07-06T08:53:41.744032Z","shell.execute_reply":"2025-07-06T08:53:41.742793Z"},"papermill":{"duration":0.016993,"end_time":"2025-07-06T08:53:41.746065","exception":false,"start_time":"2025-07-06T08:53:41.729072","status":"completed"},"tags":[]},"outputs":[],"source":["pairs = [\n","    (\"you are a student\", \"are you a student\"),\n","    (\"he is a doctor\", \"is he a doctor\"),\n","    (\"they are engineers\", \"are they engineers\"),\n","    (\"the cat is black\", \"is the cat black\"),\n","    (\"we can go now\", \"can we go now\"),\n","    (\"she will be here\", \"will she be here\"),\n","    (\"this is my book\", \"is this my book\"),\n","    (\"you are happy\", \"are you happy\")\n","]"]},{"cell_type":"markdown","id":"8e427fec","metadata":{"papermill":{"duration":0.007363,"end_time":"2025-07-06T08:53:41.76178","exception":false,"start_time":"2025-07-06T08:53:41.754417","status":"completed"},"tags":[]},"source":["# Decoder Only, Encoder Only , Decoder - Encoder Yapıları"]},{"cell_type":"code","execution_count":12,"id":"006f9777","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:53:41.779503Z","iopub.status.busy":"2025-07-06T08:53:41.779126Z","iopub.status.idle":"2025-07-06T08:54:37.68799Z","shell.execute_reply":"2025-07-06T08:54:37.68701Z"},"papermill":{"duration":55.920736,"end_time":"2025-07-06T08:54:37.690315","exception":false,"start_time":"2025-07-06T08:53:41.769579","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2025-07-06 08:53:45.385177: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n","E0000 00:00:1751792025.637042      13 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","E0000 00:00:1751792025.710402      13 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]},{"name":"stdout","output_type":"stream","text":["================================================================================\n","--- BÖLÜM 1: ENCODER-ONLY (BERT ile Maske Doldurma) ---\n","GÖREV: Cümledeki eksik kelimeyi, cümlenin hem başını hem de sonunu dikkate alarak tahmin etmek.\n","\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6422ee1b359e4520a85ef2c373c28ab6","version_major":2,"version_minor":0},"text/plain":["config.json:   0%|          | 0.00/385 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f5caf6f96964e5c8d83b5d100fa77d3","version_major":2,"version_minor":0},"text/plain":["model.safetensors:   0%|          | 0.00/445M [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b63ee949d3ab41a59876206e0982215d","version_major":2,"version_minor":0},"text/plain":["tokenizer_config.json:   0%|          | 0.00/60.0 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9f88b3f555d54922b8b4baa9728f02aa","version_major":2,"version_minor":0},"text/plain":["vocab.txt: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Device set to use cpu\n"]},{"name":"stdout","output_type":"stream","text":["Girdi Cümlesi: İstanbul, Türkiye'nin en [MASK] şehridir.\n","\n","BERT'in Tahminleri:\n","  -> Tahmin: 'büyük', Skor: 0.5236\n","  -> Tahmin: 'kalabalık', Skor: 0.1321\n","  -> Tahmin: 'güzel', Skor: 0.0638\n","  -> Tahmin: 'pahalı', Skor: 0.0372\n","  -> Tahmin: 'eski', Skor: 0.0280\n","\n",">>> YORUM: BERT (Encoder-Only), 'İstanbul' ve 'şehridir' kelimelerine aynı anda bakarak (çift yönlü)\n","boşluğa en uygun kelimenin 'kalabalık' veya 'büyük' olduğuna karar verdi. Bu, derin bir anlama yeteneğidir.\n","\n","================================================================================\n","--- BÖLÜM 2: DECODER-ONLY (GPT ile Metin Üretme) ---\n","GÖREV: Verilen bir başlangıç metnini (prompt) mantıklı ve tutarlı bir şekilde devam ettirmek.\n","\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a11a429797014593b0db4016058f02b5","version_major":2,"version_minor":0},"text/plain":["config.json:   0%|          | 0.00/893 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2a045fb5ebca4f7db3a898ff17eb2b27","version_major":2,"version_minor":0},"text/plain":["model.safetensors:   0%|          | 0.00/498M [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"345bfa498a444aacaaae2c4bf93fe6ab","version_major":2,"version_minor":0},"text/plain":["generation_config.json:   0%|          | 0.00/132 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"185d4f8700694843a30e25ce58c40918","version_major":2,"version_minor":0},"text/plain":["tokenizer_config.json:   0%|          | 0.00/537 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9cefd9afb66d4cd2a16216b51cc96891","version_major":2,"version_minor":0},"text/plain":["vocab.json: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c788ccfc14cd41af9911bbe70957fac0","version_major":2,"version_minor":0},"text/plain":["merges.txt: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"db1f5904d42247539e8c75ce49dcfa6b","version_major":2,"version_minor":0},"text/plain":["tokenizer.json: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d21ba142d8b94013af919b1d6f49a5fb","version_major":2,"version_minor":0},"text/plain":["special_tokens_map.json:   0%|          | 0.00/438 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Device set to use cpu\n","Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.\n"]},{"name":"stdout","output_type":"stream","text":["Başlangıç Metni (Prompt): 'Yapay zeka, son yıllarda en çok konuşulan konulardan biri haline geldi. Özellikle...'\n","\n","GPT'nin Ürettiği Devam Metni:\n","Yapay zeka, son yıllarda en çok konuşulan konulardan biri haline geldi. Özellikle dijitalleşme ile birlikte yapay zekanın önemi de arttı. Yapay zekadan sonra gelen teknolojik gelişim de tüm dünyayı etkisi altına aldı. İnsan beyni artık insan beyninin bir parçası olarak çalışıyor. Ve bu bağlamda da her alanda kullanılan yazılım dilleri, yapay zekayı da bir hale getirdi. Yapay zekada insan beyni, bir bilgisayar gibi çalışıyor ve her türlü bilgiyi anlayabiliyor. Bireyin beyni, bir bilgisayardan çok daha fazlasıdır ve bu da insan beyn\n","\n",">>> YORUM: GPT (Decoder-Only), sadece kendisinden önce gelen kelimelere bakarak (tek yönlü)\n","adım adım yeni kelimeler üretti ve başlangıç metnini dilbilgisi kurallarına uygun bir şekilde devam ettirdi. Bu, saf bir üretme yeteneğidir.\n","\n","================================================================================\n","--- BÖLÜM 3: ENCODER-DECODER (T5 ile Özetleme) ---\n","GÖREV: Uzun bir metni okuyup anladıktan sonra, bu anlayışı kullanarak kısa ve yeni bir özet metni üretmek.\n","\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3d43a76184924e6aa1ed49102648f3ef","version_major":2,"version_minor":0},"text/plain":["config.json: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6893abc7ec564c36a9c1ceef963117bf","version_major":2,"version_minor":0},"text/plain":["model.safetensors:   0%|          | 0.00/892M [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8f9d1fd117744dc088b92c43406b2789","version_major":2,"version_minor":0},"text/plain":["generation_config.json:   0%|          | 0.00/147 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"07676c523ea54c458d479aa18ad64068","version_major":2,"version_minor":0},"text/plain":["spiece.model:   0%|          | 0.00/792k [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c834df583fe34a5c82da0132db50116f","version_major":2,"version_minor":0},"text/plain":["tokenizer.json: 0.00B [00:00, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Device set to use cpu\n"]},{"name":"stdout","output_type":"stream","text":["Özetlenecek Orijinal Metin:\n","\n","The Eiffel Tower is a wrought-iron lattice tower on the Champ de Mars in Paris, France. \n","It is named after the engineer Gustave Eiffel, whose company designed and built the tower. \n","Locally nicknamed 'La dame de fer' (French for 'Iron Lady'), the structure was built from 1887 to 1889 \n","as the centerpiece of the 1889 World's Fair. Although initially criticized by some of France's leading \n","artists and intellectuals for its design, it has since become a global cultural icon of France and \n","one of the most recognizable structures in the world.\n","\n","\n","T5 Modelinin Ürettiği Özet:\n","the tower is named after the engineer Gustave Eiffel, whose company designed and built the tower . locally nicknamed 'la dame de fer' (french for 'iron lady'), it\n","\n",">>> YORUM: T5 (Encoder-Decoder), önce Encoder kısmı ile tüm metni okuyup anladı.\n","Ardından Decoder kısmı, bu genel anlayıştan yola çıkarak metnin ana fikrini içeren tamamen yeni ve kısa bir cümle üretti. Bu, bir formattan diğerine dönüşümdür.\n"]}],"source":["# Gerekli kütüphaneleri ve özellikle pipeline aracını içe aktarıyoruz.\n","# pipeline, karmaşık kodlar yazmadan modelleri hızlıca kullanmamızı sağlar.\n","from transformers import pipeline\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","# ####################################################################################\n","# --- BÖLÜM 1: ENCODER-ONLY MİMARİSİ (BERT) ---\n","# Görev: Metni Anlamak ve Bağlamdan Çıkarım Yapmak\n","# ####################################################################################\n","print(\"=\"*80)\n","print(\"--- BÖLÜM 1: ENCODER-ONLY (BERT ile Maske Doldurma) ---\")\n","print(\"GÖREV: Cümledeki eksik kelimeyi, cümlenin hem başını hem de sonunu dikkate alarak tahmin etmek.\\n\")\n","\n","# 'fill-mask' görevi için bir pipeline oluşturuyoruz.\n","# Model olarak Türkçe için çok yaygın kullanılan bir BERT modeli seçiyoruz.\n","mask_filler = pipeline(\"fill-mask\", model=\"dbmdz/bert-base-turkish-cased\")\n","\n","# BERT'e ortasında [MASK] token'ı olan bir cümle veriyoruz.\n","masked_sentence = \"İstanbul, Türkiye'nin en [MASK] şehridir.\"\n","print(f\"Girdi Cümlesi: {masked_sentence}\\n\")\n","\n","print(\"BERT'in Tahminleri:\")\n","# Modelden en olası 5 tahmini istiyoruz.\n","predictions = mask_filler(masked_sentence, top_k=5)\n","for pred in predictions:\n","    print(f\"  -> Tahmin: '{pred['token_str']}', Skor: {pred['score']:.4f}\")\n","\n","print(\"\\n>>> YORUM: BERT (Encoder-Only), 'İstanbul' ve 'şehridir' kelimelerine aynı anda bakarak (çift yönlü)\")\n","print(\"boşluğa en uygun kelimenin 'kalabalık' veya 'büyük' olduğuna karar verdi. Bu, derin bir anlama yeteneğidir.\")\n","\n","\n","# ####################################################################################\n","# --- BÖLÜM 2: DECODER-ONLY MİMARİSİ (GPT) ---\n","# Görev: Sıfırdan Metin Üretmek ve Devam Ettirmek\n","# ####################################################################################\n","print(\"\\n\" + \"=\"*80)\n","print(\"--- BÖLÜM 2: DECODER-ONLY (GPT ile Metin Üretme) ---\")\n","print(\"GÖREV: Verilen bir başlangıç metnini (prompt) mantıklı ve tutarlı bir şekilde devam ettirmek.\\n\")\n","\n","# 'text-generation' görevi için bir pipeline oluşturuyoruz.\n","# Türkçe için eğitilmiş bir GPT-2 modeli kullanıyoruz.\n","text_generator = pipeline(\"text-generation\", model=\"ytu-ce-cosmos/turkish-gpt2\")\n","\n","# GPT'ye bir başlangıç metni veriyoruz.\n","prompt = \"Yapay zeka, son yıllarda en çok konuşulan konulardan biri haline geldi. Özellikle\"\n","print(f\"Başlangıç Metni (Prompt): '{prompt}...'\\n\")\n","\n","print(\"GPT'nin Ürettiği Devam Metni:\")\n","# Modelden bu metni 100 karakterlik bir metinle devam ettirmesini istiyoruz.\n","generated_text = text_generator(prompt, max_length=100, num_return_sequences=1)\n","print(generated_text[0]['generated_text'])\n","\n","print(\"\\n>>> YORUM: GPT (Decoder-Only), sadece kendisinden önce gelen kelimelere bakarak (tek yönlü)\")\n","print(\"adım adım yeni kelimeler üretti ve başlangıç metnini dilbilgisi kurallarına uygun bir şekilde devam ettirdi. Bu, saf bir üretme yeteneğidir.\")\n","\n","\n","# ####################################################################################\n","# --- BÖLÜM 3: ENCODER-DECODER MİMARİSİ (T5) ---\n","# Görev: Bir Metin Formatını Başka Bir Formata Dönüştürmek\n","# ####################################################################################\n","print(\"\\n\" + \"=\"*80)\n","print(\"--- BÖLÜM 3: ENCODER-DECODER (T5 ile Özetleme) ---\")\n","print(\"GÖREV: Uzun bir metni okuyup anladıktan sonra, bu anlayışı kullanarak kısa ve yeni bir özet metni üretmek.\\n\")\n","\n","# 'summarization' görevi için bir pipeline oluşturuyoruz.\n","# T5, bu tür dönüşüm görevleri için tasarlanmış bir Encoder-Decoder modelidir.\n","summarizer = pipeline(\"summarization\", model=\"google-t5/t5-base\")\n","\n","# Özetlenecek uzun bir metin hazırlayalım.\n","long_text = \"\"\"\n","The Eiffel Tower is a wrought-iron lattice tower on the Champ de Mars in Paris, France. \n","It is named after the engineer Gustave Eiffel, whose company designed and built the tower. \n","Locally nicknamed 'La dame de fer' (French for 'Iron Lady'), the structure was built from 1887 to 1889 \n","as the centerpiece of the 1889 World's Fair. Although initially criticized by some of France's leading \n","artists and intellectuals for its design, it has since become a global cultural icon of France and \n","one of the most recognizable structures in the world.\n","\"\"\"\n","print(f\"Özetlenecek Orijinal Metin:\\n{long_text}\\n\")\n","\n","print(\"T5 Modelinin Ürettiği Özet:\")\n","# Modelden metnin özetini oluşturmasını istiyoruz.\n","summary = summarizer(long_text, max_length=50, min_length=10, do_sample=False)\n","print(summary[0]['summary_text'])\n","\n","print(\"\\n>>> YORUM: T5 (Encoder-Decoder), önce Encoder kısmı ile tüm metni okuyup anladı.\")\n","print(\"Ardından Decoder kısmı, bu genel anlayıştan yola çıkarak metnin ana fikrini içeren tamamen yeni ve kısa bir cümle üretti. Bu, bir formattan diğerine dönüşümdür.\")"]},{"cell_type":"markdown","id":"381e30da","metadata":{"papermill":{"duration":0.012335,"end_time":"2025-07-06T08:54:37.720896","exception":false,"start_time":"2025-07-06T08:54:37.708561","status":"completed"},"tags":[]},"source":["# Uçtan Uca Konular"]},{"cell_type":"code","execution_count":13,"id":"bdcf073b","metadata":{"execution":{"iopub.execute_input":"2025-07-06T08:54:37.748574Z","iopub.status.busy":"2025-07-06T08:54:37.747756Z","iopub.status.idle":"2025-07-06T08:56:00.093968Z","shell.execute_reply":"2025-07-06T08:56:00.091662Z"},"papermill":{"duration":82.380311,"end_time":"2025-07-06T08:56:00.113993","exception":false,"start_time":"2025-07-06T08:54:37.733682","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["================================================================================\n","--- AŞAMA 1: Sadece Embedding ile Anlam Yakalamaya Çalışmak (Başarısız Olacak) ---\n","Fikir: Bir cümlenin anlamı, içindeki kelimelerin anlamlarının ortalamasıdır.\n","\n","Girdi: 'he is a student'\n","Çıktı (En Yakın Cümle): 'o bir doktor'\n","\n",">>> KAZANIM/PROBLEM:\n","Bu yöntem, kelimelerin 'anlam torbası' gibi davranır. Kelime sırasını ve grameri tamamen yok sayar.\n","Bu yüzden 'he is a student' gibi bir cümleyi doğru ayırt edemez, çünkü hem 'he is a doctor'\n","hem de 'i am a student' cümlelerine anlamsal olarak benzerdir. Dizilim bilgisini kodlayacak bir yapıya ihtiyacımız var.\n","================================================================================\n","\n","--- AŞAMA 2: Encoder ile Cümle Dizilimini Anlamak ---\n","Fikir: Bir RNN (GRU), cümleyi kelime kelime okuyarak dizilim bilgisini tek bir 'bağlam vektöründe' özetler.\n","\n","Girdi: 'i run fast'\n","Encoder'ın ürettiği 'Anlam Özeti' (Context Vector) boyutu: torch.Size([1, 1, 64])\n","Bu vektör, cümlenin hem kelimelerini hem de onların sırasını içerir.\n","\n",">>> KAZANIM/PROBLEM:\n","Artık elimizde cümlenin sıralı anlamını taşıyan güçlü bir özet var. Ancak bu özetten yola çıkarak\n","nasıl kelime kelime yeni bir cümle 'üretebiliriz'? Bunun için bir üreticiye, yani Decoder'a ihtiyacımız var.\n","================================================================================\n","\n","--- AŞAMA 3: Encoder-Decoder ile Üretken Çeviri ---\n","Fikir: Encoder'ın ürettiği 'anlam özeti', Decoder için bir başlangıç noktasıdır. Decoder, bu özetle başlar ve adım adım yeni bir cümle kurar.\n","\n","Encoder-Decoder modeli eğitiliyor...\n","Eğitim tamamlandı.\n","\n","--- Girdi: 'i run fast' ---\n","1. Encoder girdi cümlesini okudu ve bağlam vektörünü üretti.\n","2. Decoder, bağlam vektörüyle üretime başlıyor:\n","   -> Adım 1: 'ben' kelimesi üretildi.\n","   -> Adım 2: 'hızlı' kelimesi üretildi.\n","   -> Adım 3: 'koşarım' kelimesi üretildi.\n","   -> Adım 4: 'EOS' kelimesi üretildi.\n","Nihai Çıktı: 'ben hızlı koşarım'\n","--- Girdi: 'she is a doctor' ---\n","1. Encoder girdi cümlesini okudu ve bağlam vektörünü üretti.\n","2. Decoder, bağlam vektörüyle üretime başlıyor:\n","   -> Adım 1: 'o' kelimesi üretildi.\n","   -> Adım 2: 'bir' kelimesi üretildi.\n","   -> Adım 3: 'doktor' kelimesi üretildi.\n","   -> Adım 4: 'EOS' kelimesi üretildi.\n","Nihai Çıktı: 'o bir doktor'\n","\n",">>> KAZANIM/PROBLEM:\n","Artık modelimiz sadece en yakın cümleyi bulmuyor, bir cümlenin sıralı anlamını (Encoder ile)\n","kavrayıp bu anlayıştan yola çıkarak kelime kelime, gramer kurallarına uygun yeni bir cümle (Decoder ile) inşa ediyor.\n","Bu, dil işlemede basit benzerlikten gerçek üretkenliğe geçiştir.\n"]}],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import numpy as np\n","import random\n","from sklearn.metrics.pairwise import cosine_similarity\n","\n","# --- Genel Kurulum ---\n","# Bu kurulum tüm aşamalarda kullanılacak\n","device = torch.device(\"cpu\")\n","SOS_token = 0; EOS_token = 1\n","\n","# Veri setimiz: İngilizce'den Türkçe'ye çeviri çiftleri\n","pairs = [\n","    (\"i am a student\", \"ben bir öğrenciyim\"),\n","    (\"he is a doctor\", \"o bir doktor\"),\n","    (\"they are engineers\", \"onlar mühendis\"),\n","    (\"i run fast\", \"ben hızlı koşarım\"),\n","    (\"she reads a book\", \"o bir kitap okur\")\n","]\n","\n","# Kelime dağarcığı oluşturmak için Lang sınıfı\n","class Lang:\n","    def __init__(self):\n","        self.word2index = {}; self.index2word = {0: \"SOS\", 1: \"EOS\"}; self.n_words = 2\n","    def addSentence(self, sentence):\n","        for word in sentence.split(' '): self.addWord(word)\n","    def addWord(self, word):\n","        if word not in self.word2index:\n","            self.word2index[word] = self.n_words; self.index2word[self.n_words] = word; self.n_words += 1\n","            \n","input_lang = Lang(); output_lang = Lang()\n","for pair in pairs:\n","    input_lang.addSentence(pair[0]); output_lang.addSentence(pair[1])\n","\n","# Hiperparametreler\n","embedding_dim = 64\n","hidden_size = 64\n","\n","# --- AŞAMA 1: Sadece Embedding - \"Anlam Torbası\" Yaklaşımı ---\n","print(\"=\"*80)\n","print(\"--- AŞAMA 1: Sadece Embedding ile Anlam Yakalamaya Çalışmak (Başarısız Olacak) ---\")\n","print(\"Fikir: Bir cümlenin anlamı, içindeki kelimelerin anlamlarının ortalamasıdır.\\n\")\n","\n","# Kelime vektörlerini oluşturmak için bir embedding katmanı\n","embedding_layer = nn.Embedding(input_lang.n_words, embedding_dim)\n","\n","def get_avg_vector(sentence, lang, layer):\n","    \"\"\"Cümlenin ortalama embedding vektörünü hesaplar.\"\"\"\n","    with torch.no_grad():\n","        indices = torch.LongTensor([lang.word2index[w] for w in sentence.split(' ')])\n","        embeddings = layer(indices)\n","        return embeddings.mean(dim=0)\n","\n","# Veri setindeki her cümlenin ortalama vektörünü hesaplayalım\n","input_vectors = [get_avg_vector(pair[0], input_lang, embedding_layer) for pair in pairs]\n","target_vectors = [get_avg_vector(pair[1], output_lang, embedding_layer) for pair in pairs]\n","\n","def translate_with_averaging(sentence, input_vectors, target_sentences):\n","    \"\"\"Girdi cümlesine en çok benzeyen hedef cümleyi bulur.\"\"\"\n","    input_vec = get_avg_vector(sentence, input_lang, embedding_layer).numpy().reshape(1, -1)\n","    # Numpy'a çevirerek benzerlik hesapla\n","    target_vecs_np = torch.stack(target_vectors).numpy()\n","    similarities = cosine_similarity(input_vec, target_vecs_np)\n","    best_match_index = np.argmax(similarities)\n","    return target_sentences[best_match_index]\n","\n","# Test edelim\n","test_sentence_1 = \"he is a student\" # \"he\" ve \"student\" kelimelerini biliyor\n","print(f\"Girdi: '{test_sentence_1}'\")\n","translation = translate_with_averaging(test_sentence_1, input_vectors, [p[1] for p in pairs])\n","print(f\"Çıktı (En Yakın Cümle): '{translation}'\")\n","\n","print(\"\\n>>> KAZANIM/PROBLEM:\")\n","print(\"Bu yöntem, kelimelerin 'anlam torbası' gibi davranır. Kelime sırasını ve grameri tamamen yok sayar.\")\n","print(\"Bu yüzden 'he is a student' gibi bir cümleyi doğru ayırt edemez, çünkü hem 'he is a doctor'\")\n","print(\"hem de 'i am a student' cümlelerine anlamsal olarak benzerdir. Dizilim bilgisini kodlayacak bir yapıya ihtiyacımız var.\")\n","print(\"=\"*80)\n","\n","\n","# --- AŞAMA 2: Encoder'ı Eklemek - Sıralı Anlamı Yoğunlaştırma ---\n","print(\"\\n--- AŞAMA 2: Encoder ile Cümle Dizilimini Anlamak ---\")\n","print(\"Fikir: Bir RNN (GRU), cümleyi kelime kelime okuyarak dizilim bilgisini tek bir 'bağlam vektöründe' özetler.\\n\")\n","\n","class Encoder(nn.Module):\n","    def __init__(self, input_size, hidden_size):\n","        super(Encoder, self).__init__()\n","        self.embedding = nn.Embedding(input_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","    def forward(self, input, hidden):\n","        embedded = self.embedding(input).view(1, 1, -1)\n","        _, hidden = self.gru(embedded, hidden)\n","        return hidden\n","    def initHidden(self): return torch.zeros(1, 1, hidden_size, device=device)\n","\n","encoder = Encoder(input_lang.n_words, hidden_size)\n","\n","def encode_sentence(sentence, lang, encoder_model):\n","    \"\"\"Bir cümleyi tek bir bağlam vektörüne kodlar.\"\"\"\n","    with torch.no_grad():\n","        indices = torch.LongTensor([lang.word2index[w] for w in sentence.split(' ')])\n","        hidden = encoder_model.initHidden()\n","        for i in range(len(indices)):\n","            # Her kelime sırayla işlenir ve gizli durum güncellenir\n","            hidden = encoder_model(indices[i].unsqueeze(0), hidden)\n","        return hidden\n","\n","# Test edelim\n","test_sentence_2 = \"i run fast\"\n","context_vector = encode_sentence(test_sentence_2, input_lang, encoder)\n","print(f\"Girdi: '{test_sentence_2}'\")\n","print(f\"Encoder'ın ürettiği 'Anlam Özeti' (Context Vector) boyutu: {context_vector.shape}\")\n","print(\"Bu vektör, cümlenin hem kelimelerini hem de onların sırasını içerir.\")\n","\n","print(\"\\n>>> KAZANIM/PROBLEM:\")\n","print(\"Artık elimizde cümlenin sıralı anlamını taşıyan güçlü bir özet var. Ancak bu özetten yola çıkarak\")\n","print(\"nasıl kelime kelime yeni bir cümle 'üretebiliriz'? Bunun için bir üreticiye, yani Decoder'a ihtiyacımız var.\")\n","print(\"=\"*80)\n","\n","\n","# --- AŞAMA 3: Encoder + Decoder - Anlama ve Sıfırdan Üretme ---\n","print(\"\\n--- AŞAMA 3: Encoder-Decoder ile Üretken Çeviri ---\")\n","print(\"Fikir: Encoder'ın ürettiği 'anlam özeti', Decoder için bir başlangıç noktasıdır. Decoder, bu özetle başlar ve adım adım yeni bir cümle kurar.\\n\")\n","\n","class Decoder(nn.Module):\n","    def __init__(self, hidden_size, output_size):\n","        super(Decoder, self).__init__()\n","        self.embedding = nn.Embedding(output_size, hidden_size)\n","        self.gru = nn.GRU(hidden_size, hidden_size)\n","        self.out = nn.Linear(hidden_size, output_size)\n","        self.log_softmax = nn.LogSoftmax(dim=1)\n","    def forward(self, input, hidden):\n","        output = self.embedding(input).view(1, 1, -1); output = torch.relu(output)\n","        output, hidden = self.gru(output, hidden)\n","        output = self.log_softmax(self.out(output[0])); return output, hidden\n","\n","# Eğitim\n","encoder = Encoder(input_lang.n_words, hidden_size)\n","decoder = Decoder(hidden_size, output_lang.n_words)\n","enc_optimizer = optim.SGD(encoder.parameters(), lr=0.01)\n","dec_optimizer = optim.SGD(decoder.parameters(), lr=0.01)\n","criterion = nn.NLLLoss()\n","\n","print(\"Encoder-Decoder modeli eğitiliyor...\")\n","for i in range(10000): # Eğitim iterasyonları\n","    pair = random.choice(pairs)\n","    input_tensor = torch.LongTensor([input_lang.word2index[s] for s in pair[0].split(' ')])\n","    target_tensor = torch.LongTensor([output_lang.word2index[s] for s in pair[1].split(' ')] + [EOS_token])\n","    \n","    # Gerçek eğitim döngüsü (sessiz)\n","    enc_hidden = encoder.initHidden()\n","    enc_optimizer.zero_grad(); dec_optimizer.zero_grad()\n","    loss = 0\n","    for ei in range(len(input_tensor)): enc_hidden = encoder(input_tensor[ei].unsqueeze(0), enc_hidden)\n","    dec_input = torch.tensor([[SOS_token]]); dec_hidden = enc_hidden\n","    for di in range(len(target_tensor)):\n","        dec_output, dec_hidden = decoder(dec_input, dec_hidden)\n","        loss += criterion(dec_output, target_tensor[di].unsqueeze(0)); dec_input = target_tensor[di]\n","    loss.backward(); enc_optimizer.step(); dec_optimizer.step()\n","print(\"Eğitim tamamlandı.\\n\")\n","\n","# Test ve Adım Adım Üretimi Gösterme\n","def translate_with_encoder_decoder(sentence):\n","    print(f\"--- Girdi: '{sentence}' ---\")\n","    with torch.no_grad():\n","        input_tensor = torch.LongTensor([input_lang.word2index[s] for s in sentence.split(' ')])\n","        \n","        # Encoder Aşaması\n","        enc_hidden = encoder.initHidden()\n","        for ei in range(len(input_tensor)):\n","            enc_hidden = encoder(input_tensor[ei].unsqueeze(0), enc_hidden)\n","        print(\"1. Encoder girdi cümlesini okudu ve bağlam vektörünü üretti.\")\n","\n","        # Decoder Aşaması\n","        dec_input = torch.tensor([[SOS_token]])\n","        dec_hidden = enc_hidden\n","        decoded_words = []\n","        print(\"2. Decoder, bağlam vektörüyle üretime başlıyor:\")\n","        for di in range(10): # Maksimum 10 kelime\n","            dec_output, dec_hidden = decoder(dec_input, dec_hidden)\n","            topv, topi = dec_output.data.topk(1)\n","            word = output_lang.index2word[topi.item()]\n","            print(f\"   -> Adım {di+1}: '{word}' kelimesi üretildi.\")\n","            if topi.item() == EOS_token: break\n","            decoded_words.append(word)\n","            dec_input = topi.squeeze().detach().unsqueeze(0)\n","        \n","        print(f\"Nihai Çıktı: '{' '.join(decoded_words)}'\")\n","\n","translate_with_encoder_decoder(\"i run fast\")\n","translate_with_encoder_decoder(\"she is a doctor\")\n","\n","print(\"\\n>>> KAZANIM/PROBLEM:\")\n","print(\"Artık modelimiz sadece en yakın cümleyi bulmuyor, bir cümlenin sıralı anlamını (Encoder ile)\")\n","print(\"kavrayıp bu anlayıştan yola çıkarak kelime kelime, gramer kurallarına uygun yeni bir cümle (Decoder ile) inşa ediyor.\")\n","print(\"Bu, dil işlemede basit benzerlikten gerçek üretkenliğe geçiştir.\")"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31040,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.11"},"papermill":{"default_parameters":{},"duration":521.835469,"end_time":"2025-07-06T08:56:02.855431","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-07-06T08:47:21.019962","version":"2.6.0"},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{"02930041b9174113a8ef167f720379ce":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_c662d89e84fa47a0bf38cc8a0626a0a8","placeholder":"​","style":"IPY_MODEL_92d1b0f50f19448ba4952f0898288d63","tabbable":null,"tooltip":null,"value":"model.safetensors: 100%"}},"045e11d2a16947a19c4d260039f07bc5":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"046be51410824d01a217a343785b8007":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"06c0a8e9c8874372a0e76c4f70ace39e":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"076041d867114c7cbae40e1e5db1f6f0":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"07676c523ea54c458d479aa18ad64068":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_174de7c8f5fc4594a5d8ee101918fa9b","IPY_MODEL_4da6b844fe1943ae9c5d17f1b970769e","IPY_MODEL_75202f481d85434183da646023efae6b"],"layout":"IPY_MODEL_0f6f83ce4afc41b79d0b9b25e419ffc5","tabbable":null,"tooltip":null}},"077c8d180f724c2a95df7ec368f1eea8":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0796c26bf62147cd9ae50339e077b627":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_bbdbe036236340f39bae0ef2710d2fb9","placeholder":"​","style":"IPY_MODEL_e7932f4582e44dc5a5f42b282916062b","tabbable":null,"tooltip":null,"value":"config.json: "}},"09e2040dd6834e37a61eb44ff49b6e11":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_ac793e09bcb64639b04a027719736252","placeholder":"​","style":"IPY_MODEL_78b235d55ed54526b6bb4434f7fa57c2","tabbable":null,"tooltip":null,"value":"model.safetensors: 100%"}},"0a60cd6be56c4dffa7aff2a3a5818d36":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"0f6f83ce4afc41b79d0b9b25e419ffc5":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0fcac29b49c54962b8bd970434ec42e5":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_a8b5dd970bc74ce882e1721d4ae15470","placeholder":"​","style":"IPY_MODEL_a9c2409b6c7a47e6abddb0849534f266","tabbable":null,"tooltip":null,"value":"generation_config.json: 100%"}},"101e974ce93948d095c24db4adcd1ae9":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"10b4723f5e3841b79ed2ad193a8c8756":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_045e11d2a16947a19c4d260039f07bc5","max":132.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_6e8d99bd5cef4e80abbb72cfb40ca8bc","tabbable":null,"tooltip":null,"value":132.0}},"134c26097afc40a8bb462042f88cd5d9":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_142403f392ce40b79f64c70d281e63ed","max":537.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_66cd3df45c824c6694550514691abcee","tabbable":null,"tooltip":null,"value":537.0}},"142403f392ce40b79f64c70d281e63ed":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"174de7c8f5fc4594a5d8ee101918fa9b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_3ffe2caab389442fadd829c7cdf9b4a3","placeholder":"​","style":"IPY_MODEL_74c1d09f5fc6475ebe64e5864037059e","tabbable":null,"tooltip":null,"value":"spiece.model: 100%"}},"178a3e8318ba42cba34c4ed48f32b0a5":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"17e5f4dc9c5247eca7e886e85e29b537":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"185d4f8700694843a30e25ce58c40918":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_939315a06b3347198da5589014be700d","IPY_MODEL_134c26097afc40a8bb462042f88cd5d9","IPY_MODEL_267c729b55774c3fa146853eb58a3b59"],"layout":"IPY_MODEL_87a90525af1c404594d0964829d31cbd","tabbable":null,"tooltip":null}},"18dfed4968694abeb081d97911f5254a":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"19250020e164420bae2e224396a2a3ac":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_96a0b9b09456418a937e444d8470cfae","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_3f5b8e1fff8d4fa2af32d0c0bd77875e","tabbable":null,"tooltip":null,"value":1.0}},"1b420a6398e14f93bf9c5afe8ef50a00":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1d03dfaba09141178d6eda322fb82e45":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_64ad33762b8b4e5c8072f9f823478c8d","placeholder":"​","style":"IPY_MODEL_e494070313a14928b11c2b31b334cfed","tabbable":null,"tooltip":null,"value":" 2.37M/? [00:00&lt;00:00, 70.7MB/s]"}},"1fd7461bb5bc4e4ab9a391c8edf54275":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_8e9a1c02f46c4552b44fc80e1c46d0e8","placeholder":"​","style":"IPY_MODEL_53cab34f3a8a456bb06ce97e02033d34","tabbable":null,"tooltip":null,"value":" 892M/892M [00:03&lt;00:00, 439MB/s]"}},"217a50eb875a4f49b8b63741bed54db0":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"267c729b55774c3fa146853eb58a3b59":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_9bf41ee579cb46d694130d9984e028f1","placeholder":"​","style":"IPY_MODEL_84f9dcb31f6f48abbf70e5afaec4ebdf","tabbable":null,"tooltip":null,"value":" 537/537 [00:00&lt;00:00, 56.9kB/s]"}},"272c49cb65a949759af717c14d66410e":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2a045fb5ebca4f7db3a898ff17eb2b27":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_09e2040dd6834e37a61eb44ff49b6e11","IPY_MODEL_aa98b17cad1e45d58ce81104f57696b8","IPY_MODEL_e7d8b64fe9a24c57a56aa1ddd16342f0"],"layout":"IPY_MODEL_cb436eee62e649e0ac22627ec9c86714","tabbable":null,"tooltip":null}},"2c26d12725a74a3ca849cba7378ef7c7":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_ce9e7d2039a149b79b95bab206f9d477","placeholder":"​","style":"IPY_MODEL_5cfc87ca140a410bbe93bbd2a89bd405","tabbable":null,"tooltip":null,"value":"tokenizer_config.json: 100%"}},"2de834c1272047a2bbd4e886cf41af2f":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_f1c4e903639740feb147c4d9b2c0f811","max":60.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_7c2cd6d3f0c846e1ab32602a94c2a958","tabbable":null,"tooltip":null,"value":60.0}},"2df89bf8f5e9471385ee001214fd987b":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2f9101a381ac406b83074651bbca4fd0":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"345bfa498a444aacaaae2c4bf93fe6ab":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_af120461c8ad411eb0f46790cc0efe3d","IPY_MODEL_10b4723f5e3841b79ed2ad193a8c8756","IPY_MODEL_779cbc71906445fdb9fc8fe793575910"],"layout":"IPY_MODEL_750d1accced84eb7a2126c7b530ac012","tabbable":null,"tooltip":null}},"36bea2a85efc442e8c0de0f220480eed":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"39ae8b56367d4b83bff6431f75eb95ce":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3b24f7d01eef4eb9a06332567696e689":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_101e974ce93948d095c24db4adcd1ae9","max":147.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_8f34a5e349fa4bfd9437848317304b00","tabbable":null,"tooltip":null,"value":147.0}},"3d43a76184924e6aa1ed49102648f3ef":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0796c26bf62147cd9ae50339e077b627","IPY_MODEL_e485db7c38dd413e9360f0ed2a0b8dbe","IPY_MODEL_d4c86b1c88d746e29e06b1ee7ecc38d1"],"layout":"IPY_MODEL_863cac94267241c18061ed0f126a0ffc","tabbable":null,"tooltip":null}},"3f5b8e1fff8d4fa2af32d0c0bd77875e":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3f73fc4ea61042f5aaf478e62350f8a5":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"3fcbcf9f92014ce087ee681fd776fd83":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3ffe2caab389442fadd829c7cdf9b4a3":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"40cdb12b59b24ae69ff3df4fdcefb094":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"429c2b84f3484a409f565a64aee76e6e":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"42f73ef5ca184b349c0884e697250582":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"44f3d22498b84ffd8c3adce928c2cc9e":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46f82ef7f39f4a71b131f490377294ec":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"47a695dd96d54e15a78b2e1f9a52c5b0":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_217a50eb875a4f49b8b63741bed54db0","placeholder":"​","style":"IPY_MODEL_9e9513da779d4c54a09dd3f7741c5784","tabbable":null,"tooltip":null,"value":"special_tokens_map.json: 100%"}},"4c285ccb9dfb4d73892be719523aa4dc":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_5e74436f679b4ec193bd48a5bce9f208","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_e12cdd102af543299bca6e7922a38261","tabbable":null,"tooltip":null,"value":1.0}},"4cea77be98d24d75b65731dd6641da61":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"4d0b908c75334fdea107b3d87b501c41":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_4dcd9c64725b49958c1e0e3429623270","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_916f701eb2f948a79b2a2c6cdf0f0577","tabbable":null,"tooltip":null,"value":1.0}},"4da6b844fe1943ae9c5d17f1b970769e":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_077c8d180f724c2a95df7ec368f1eea8","max":791656.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_d6f79f8f3ea24bdf8f78ebcab0f3834f","tabbable":null,"tooltip":null,"value":791656.0}},"4dcd9c64725b49958c1e0e3429623270":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"53cab34f3a8a456bb06ce97e02033d34":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"5733ecb8971440c1ba233a151f219636":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5903f94133354544a8eefbc245dd37bb":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"595b60655d6743eeb24209332d7964c8":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5aaeac6bbc1b401689c19d52aefb80c5":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_40cdb12b59b24ae69ff3df4fdcefb094","placeholder":"​","style":"IPY_MODEL_a19681b87a6f4bf0acea4fea85614e86","tabbable":null,"tooltip":null,"value":"merges.txt: "}},"5cfc87ca140a410bbe93bbd2a89bd405":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"5e74436f679b4ec193bd48a5bce9f208":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"6109908807d74ceca44d14e51e5e5490":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"61702c9495344870ac7eb39b0ea797c2":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6422ee1b359e4520a85ef2c373c28ab6":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bde2af4beb6a495982ef7353073604d8","IPY_MODEL_b88da9e06b3e44f38a057c58431dfdd8","IPY_MODEL_dc6b0851d89040abaac1b3c791096272"],"layout":"IPY_MODEL_bf8f494353724653839ca93bf55de20d","tabbable":null,"tooltip":null}},"64ad33762b8b4e5c8072f9f823478c8d":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"66cd3df45c824c6694550514691abcee":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"67a052c1c49d419b8dafa6961c48fa2b":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6831c83fa8334768a08314cfc8fbc005":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_429c2b84f3484a409f565a64aee76e6e","placeholder":"​","style":"IPY_MODEL_a6eac5728d7c465bb069e38f1d9a89d3","tabbable":null,"tooltip":null,"value":" 585k/? [00:00&lt;00:00, 35.3MB/s]"}},"6893abc7ec564c36a9c1ceef963117bf":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_02930041b9174113a8ef167f720379ce","IPY_MODEL_a6da85095bc549328a9814b5525a6df0","IPY_MODEL_1fd7461bb5bc4e4ab9a391c8edf54275"],"layout":"IPY_MODEL_076041d867114c7cbae40e1e5db1f6f0","tabbable":null,"tooltip":null}},"6e8d99bd5cef4e80abbb72cfb40ca8bc":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6f5caf6f96964e5c8d83b5d100fa77d3":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a1be626c045141e384e53bd94607bf8a","IPY_MODEL_d198b51c42264e2ea8c161b45020d759","IPY_MODEL_a422d2d3b6274c9f9d3a00fbc9f9491d"],"layout":"IPY_MODEL_ce3ee962ce2e424db500c22373f998f3","tabbable":null,"tooltip":null}},"717fc5fca65c4ace978c2b0ea23a0ac7":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"71fe8c9aabb7429d89db5893e0eabf54":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"724a497ec8324696b982fd5e5e1164ce":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"737ee75e4b48415dafe55aeab732d2cb":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"74491df326f447458191e651bf9a2281":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"74c1d09f5fc6475ebe64e5864037059e":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"750d1accced84eb7a2126c7b530ac012":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"75202f481d85434183da646023efae6b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_595b60655d6743eeb24209332d7964c8","placeholder":"​","style":"IPY_MODEL_f6b266edc9fd4f35996049455cfe39d8","tabbable":null,"tooltip":null,"value":" 792k/792k [00:00&lt;00:00, 57.1MB/s]"}},"779cbc71906445fdb9fc8fe793575910":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_b69e6cbb29754bec8828e279da09dab8","placeholder":"​","style":"IPY_MODEL_bdba42a38e3641dabfab7d2e6e75862c","tabbable":null,"tooltip":null,"value":" 132/132 [00:00&lt;00:00, 14.3kB/s]"}},"78b235d55ed54526b6bb4434f7fa57c2":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"78d93ad4ecc449858df0164f0510937c":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_7aa5470a78784776801234cb9388eb68","placeholder":"​","style":"IPY_MODEL_fb10a72434314bb6a2b8453e2d9bf399","tabbable":null,"tooltip":null,"value":" 893/893 [00:00&lt;00:00, 77.4kB/s]"}},"79f06e9ee6144c75a2f87aee7ac80aab":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_5733ecb8971440c1ba233a151f219636","placeholder":"​","style":"IPY_MODEL_cf60d15d8ffc41a18a39a099366daed8","tabbable":null,"tooltip":null,"value":" 251k/? [00:00&lt;00:00, 12.7MB/s]"}},"7aa5470a78784776801234cb9388eb68":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7c2cd6d3f0c846e1ab32602a94c2a958":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7dabc573b38843b8a35c3b8bee59c57a":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_eb1c40e5c28345b99fb7a903303e7a32","max":893.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_b6ce5fc9b60745e28e960e0b1429a213","tabbable":null,"tooltip":null,"value":893.0}},"8236e8f11b3241488041f52990d73040":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8260a59e09b24a988f23d5173796da0b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"84f9dcb31f6f48abbf70e5afaec4ebdf":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"852c1bc4959a4a83ab2d129f33556912":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8626e63988924e5386203db7dd794e84":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"863cac94267241c18061ed0f126a0ffc":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"879863878ad04e52b7adcef1ce9fcec1":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"87a90525af1c404594d0964829d31cbd":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8989f7f8c5154bc3878bdd6b74450eb7":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a34da8f42fb4919b9b01bd2ff002981":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"8e9a1c02f46c4552b44fc80e1c46d0e8":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8f34a5e349fa4bfd9437848317304b00":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8f9d1fd117744dc088b92c43406b2789":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0fcac29b49c54962b8bd970434ec42e5","IPY_MODEL_3b24f7d01eef4eb9a06332567696e689","IPY_MODEL_b8381546192e4bdab53401edc0bb5d2c"],"layout":"IPY_MODEL_8236e8f11b3241488041f52990d73040","tabbable":null,"tooltip":null}},"916f701eb2f948a79b2a2c6cdf0f0577":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"92d1b0f50f19448ba4952f0898288d63":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"939315a06b3347198da5589014be700d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_b77246ef991041b3a11da09074a3e96a","placeholder":"​","style":"IPY_MODEL_717fc5fca65c4ace978c2b0ea23a0ac7","tabbable":null,"tooltip":null,"value":"tokenizer_config.json: 100%"}},"95747cf435fe41f58fd04417e4425697":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"96a0b9b09456418a937e444d8470cfae":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"96e19044419d4902a0e4422c4569c722":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_737ee75e4b48415dafe55aeab732d2cb","max":438.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_cc264367b93b4dbfb6134f0161f570aa","tabbable":null,"tooltip":null,"value":438.0}},"9ae0bac5a0dd42d4a69a508d9c0c977f":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9bf41ee579cb46d694130d9984e028f1":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9cefd9afb66d4cd2a16216b51cc96891":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ce7a6499ba98476cb6fa813e6e07cd6d","IPY_MODEL_19250020e164420bae2e224396a2a3ac","IPY_MODEL_ed254dca34844d9a8c3e05134f2f6ba0"],"layout":"IPY_MODEL_046be51410824d01a217a343785b8007","tabbable":null,"tooltip":null}},"9da2d7ac6cec4bfca94061ac9420a795":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_852c1bc4959a4a83ab2d129f33556912","placeholder":"​","style":"IPY_MODEL_b2011d7c2c3a4c92a1f51965f6b13ed1","tabbable":null,"tooltip":null,"value":"config.json: 100%"}},"9e9513da779d4c54a09dd3f7741c5784":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"9f0c78884a5940529e1525ea0f1ee693":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9f88b3f555d54922b8b4baa9728f02aa":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e57f19b1ac3f471cabbfddfc2027685c","IPY_MODEL_4c285ccb9dfb4d73892be719523aa4dc","IPY_MODEL_79f06e9ee6144c75a2f87aee7ac80aab"],"layout":"IPY_MODEL_272c49cb65a949759af717c14d66410e","tabbable":null,"tooltip":null}},"a11a429797014593b0db4016058f02b5":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9da2d7ac6cec4bfca94061ac9420a795","IPY_MODEL_7dabc573b38843b8a35c3b8bee59c57a","IPY_MODEL_78d93ad4ecc449858df0164f0510937c"],"layout":"IPY_MODEL_f8b01ad6e5d0453c8c3355529a2e0679","tabbable":null,"tooltip":null}},"a137cce6de7f46d08825ed1d1225632f":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a19681b87a6f4bf0acea4fea85614e86":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"a1be626c045141e384e53bd94607bf8a":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_67a052c1c49d419b8dafa6961c48fa2b","placeholder":"​","style":"IPY_MODEL_b6883cb2d31441a4a40e3f5ec28ef45b","tabbable":null,"tooltip":null,"value":"model.safetensors: 100%"}},"a28c38c0b5ab4696ba7ca9476d3d78c7":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_cc88afe9771140b48b311a9563a34e04","placeholder":"​","style":"IPY_MODEL_0a60cd6be56c4dffa7aff2a3a5818d36","tabbable":null,"tooltip":null,"value":" 438/438 [00:00&lt;00:00, 42.8kB/s]"}},"a422d2d3b6274c9f9d3a00fbc9f9491d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_f4836274c390447bb1f3b7ebed39e9f2","placeholder":"​","style":"IPY_MODEL_95747cf435fe41f58fd04417e4425697","tabbable":null,"tooltip":null,"value":" 445M/445M [00:08&lt;00:00, 34.7MB/s]"}},"a6da85095bc549328a9814b5525a6df0":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_06c0a8e9c8874372a0e76c4f70ace39e","max":891646390.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_36bea2a85efc442e8c0de0f220480eed","tabbable":null,"tooltip":null,"value":891646390.0}},"a6eac5728d7c465bb069e38f1d9a89d3":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"a8b5dd970bc74ce882e1721d4ae15470":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a9c2409b6c7a47e6abddb0849534f266":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"aa98b17cad1e45d58ce81104f57696b8":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_2f9101a381ac406b83074651bbca4fd0","max":497774208.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_1b420a6398e14f93bf9c5afe8ef50a00","tabbable":null,"tooltip":null,"value":497774208.0}},"abd6d0491eaa434e95c055fdd60b8a13":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ac793e09bcb64639b04a027719736252":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"adf7eff299bc45cc8ef783cdcac8035e":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"af120461c8ad411eb0f46790cc0efe3d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_879863878ad04e52b7adcef1ce9fcec1","placeholder":"​","style":"IPY_MODEL_4cea77be98d24d75b65731dd6641da61","tabbable":null,"tooltip":null,"value":"generation_config.json: 100%"}},"b0b370fd9a684195b591d99c2ef8e868":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b2011d7c2c3a4c92a1f51965f6b13ed1":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"b3596528271845008e83d41bc821c967":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_c30b6d564d4f454d95f59d543126d095","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_b0b370fd9a684195b591d99c2ef8e868","tabbable":null,"tooltip":null,"value":1.0}},"b63ee949d3ab41a59876206e0982215d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2c26d12725a74a3ca849cba7378ef7c7","IPY_MODEL_2de834c1272047a2bbd4e886cf41af2f","IPY_MODEL_ff97200219224112a7b341ef327279b9"],"layout":"IPY_MODEL_dcfd2b6db7054d518e0cae9dfd5d8611","tabbable":null,"tooltip":null}},"b6883cb2d31441a4a40e3f5ec28ef45b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"b69e6cbb29754bec8828e279da09dab8":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b6ce5fc9b60745e28e960e0b1429a213":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b77246ef991041b3a11da09074a3e96a":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b8381546192e4bdab53401edc0bb5d2c":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_8989f7f8c5154bc3878bdd6b74450eb7","placeholder":"​","style":"IPY_MODEL_e40a529af1e245018aada5a2ae638bb6","tabbable":null,"tooltip":null,"value":" 147/147 [00:00&lt;00:00, 15.5kB/s]"}},"b88da9e06b3e44f38a057c58431dfdd8":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_a137cce6de7f46d08825ed1d1225632f","max":385.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_6109908807d74ceca44d14e51e5e5490","tabbable":null,"tooltip":null,"value":385.0}},"b976e9ec270546319e28edcc5537da95":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"bbdbe036236340f39bae0ef2710d2fb9":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bdba42a38e3641dabfab7d2e6e75862c":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"bde2af4beb6a495982ef7353073604d8":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_9ae0bac5a0dd42d4a69a508d9c0c977f","placeholder":"​","style":"IPY_MODEL_178a3e8318ba42cba34c4ed48f32b0a5","tabbable":null,"tooltip":null,"value":"config.json: 100%"}},"bf67f2083e12429895ec59134dc9d799":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_17e5f4dc9c5247eca7e886e85e29b537","placeholder":"​","style":"IPY_MODEL_8a34da8f42fb4919b9b01bd2ff002981","tabbable":null,"tooltip":null,"value":"tokenizer.json: "}},"bf8f494353724653839ca93bf55de20d":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c30b6d564d4f454d95f59d543126d095":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"c44a21f980234bfdbcc615b77cce4175":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"c662d89e84fa47a0bf38cc8a0626a0a8":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c788ccfc14cd41af9911bbe70957fac0":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5aaeac6bbc1b401689c19d52aefb80c5","IPY_MODEL_e9893317b4a54b21b939a50b3ac80143","IPY_MODEL_6831c83fa8334768a08314cfc8fbc005"],"layout":"IPY_MODEL_2df89bf8f5e9471385ee001214fd987b","tabbable":null,"tooltip":null}},"c834df583fe34a5c82da0132db50116f":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bf67f2083e12429895ec59134dc9d799","IPY_MODEL_b3596528271845008e83d41bc821c967","IPY_MODEL_e325c22873fb41ca83410e71102c355d"],"layout":"IPY_MODEL_9f0c78884a5940529e1525ea0f1ee693","tabbable":null,"tooltip":null}},"c85c65f22ad54a98af7c1b447b41e58a":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"cb436eee62e649e0ac22627ec9c86714":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cc264367b93b4dbfb6134f0161f570aa":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cc88afe9771140b48b311a9563a34e04":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cd04f4d6648046149a4bff4b8850a67c":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"ce3ee962ce2e424db500c22373f998f3":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ce7a6499ba98476cb6fa813e6e07cd6d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_39ae8b56367d4b83bff6431f75eb95ce","placeholder":"​","style":"IPY_MODEL_42f73ef5ca184b349c0884e697250582","tabbable":null,"tooltip":null,"value":"vocab.json: "}},"ce9e7d2039a149b79b95bab206f9d477":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cf60d15d8ffc41a18a39a099366daed8":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"d198b51c42264e2ea8c161b45020d759":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_18dfed4968694abeb081d97911f5254a","max":444996256.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_61702c9495344870ac7eb39b0ea797c2","tabbable":null,"tooltip":null,"value":444996256.0}},"d21ba142d8b94013af919b1d6f49a5fb":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_47a695dd96d54e15a78b2e1f9a52c5b0","IPY_MODEL_96e19044419d4902a0e4422c4569c722","IPY_MODEL_a28c38c0b5ab4696ba7ca9476d3d78c7"],"layout":"IPY_MODEL_46f82ef7f39f4a71b131f490377294ec","tabbable":null,"tooltip":null}},"d3c7232c11e042e88b0c5b0089addb04":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_da710d5e055843bbafc003db45e6a489","placeholder":"​","style":"IPY_MODEL_b976e9ec270546319e28edcc5537da95","tabbable":null,"tooltip":null,"value":"tokenizer.json: "}},"d4c86b1c88d746e29e06b1ee7ecc38d1":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_abd6d0491eaa434e95c055fdd60b8a13","placeholder":"​","style":"IPY_MODEL_c44a21f980234bfdbcc615b77cce4175","tabbable":null,"tooltip":null,"value":" 1.21k/? [00:00&lt;00:00, 107kB/s]"}},"d6f79f8f3ea24bdf8f78ebcab0f3834f":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"da1378f0ed424ce5bd70150e7eaf3f47":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"da710d5e055843bbafc003db45e6a489":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"db1f5904d42247539e8c75ce49dcfa6b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d3c7232c11e042e88b0c5b0089addb04","IPY_MODEL_4d0b908c75334fdea107b3d87b501c41","IPY_MODEL_1d03dfaba09141178d6eda322fb82e45"],"layout":"IPY_MODEL_724a497ec8324696b982fd5e5e1164ce","tabbable":null,"tooltip":null}},"dc6b0851d89040abaac1b3c791096272":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_f952aa288cab45348e6a7d8ca8fc8198","placeholder":"​","style":"IPY_MODEL_adf7eff299bc45cc8ef783cdcac8035e","tabbable":null,"tooltip":null,"value":" 385/385 [00:00&lt;00:00, 33.1kB/s]"}},"dcfd2b6db7054d518e0cae9dfd5d8611":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e015928df49b4338be89130ae2021862":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e12cdd102af543299bca6e7922a38261":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e325c22873fb41ca83410e71102c355d":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_da1378f0ed424ce5bd70150e7eaf3f47","placeholder":"​","style":"IPY_MODEL_74491df326f447458191e651bf9a2281","tabbable":null,"tooltip":null,"value":" 1.39M/? [00:00&lt;00:00, 63.2MB/s]"}},"e40a529af1e245018aada5a2ae638bb6":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"e485db7c38dd413e9360f0ed2a0b8dbe":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_3f73fc4ea61042f5aaf478e62350f8a5","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_e5dae9b706404407a2a1fc3f3f6cf1ee","tabbable":null,"tooltip":null,"value":1.0}},"e494070313a14928b11c2b31b334cfed":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"e57f19b1ac3f471cabbfddfc2027685c":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_e015928df49b4338be89130ae2021862","placeholder":"​","style":"IPY_MODEL_c85c65f22ad54a98af7c1b447b41e58a","tabbable":null,"tooltip":null,"value":"vocab.txt: "}},"e5dae9b706404407a2a1fc3f3f6cf1ee":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e7932f4582e44dc5a5f42b282916062b":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"e7d8b64fe9a24c57a56aa1ddd16342f0":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_44f3d22498b84ffd8c3adce928c2cc9e","placeholder":"​","style":"IPY_MODEL_ec9a4d0ea41b468a91a4e3e42e66c0b1","tabbable":null,"tooltip":null,"value":" 498M/498M [00:01&lt;00:00, 332MB/s]"}},"e9893317b4a54b21b939a50b3ac80143":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"ProgressView","bar_style":"success","description":"","description_allow_html":false,"layout":"IPY_MODEL_8626e63988924e5386203db7dd794e84","max":1.0,"min":0.0,"orientation":"horizontal","style":"IPY_MODEL_8260a59e09b24a988f23d5173796da0b","tabbable":null,"tooltip":null,"value":1.0}},"eb1c40e5c28345b99fb7a903303e7a32":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ec9a4d0ea41b468a91a4e3e42e66c0b1":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"ed254dca34844d9a8c3e05134f2f6ba0":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_3fcbcf9f92014ce087ee681fd776fd83","placeholder":"​","style":"IPY_MODEL_5903f94133354544a8eefbc245dd37bb","tabbable":null,"tooltip":null,"value":" 927k/? [00:00&lt;00:00, 44.5MB/s]"}},"f1c4e903639740feb147c4d9b2c0f811":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f4836274c390447bb1f3b7ebed39e9f2":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f6b266edc9fd4f35996049455cfe39d8":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"f8b01ad6e5d0453c8c3355529a2e0679":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f952aa288cab45348e6a7d8ca8fc8198":{"model_module":"@jupyter-widgets/base","model_module_version":"2.0.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"2.0.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border_bottom":null,"border_left":null,"border_right":null,"border_top":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb10a72434314bb6a2b8453e2d9bf399":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"2.0.0","_view_name":"StyleView","background":null,"description_width":"","font_size":null,"text_color":null}},"ff97200219224112a7b341ef327279b9":{"model_module":"@jupyter-widgets/controls","model_module_version":"2.0.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"2.0.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"2.0.0","_view_name":"HTMLView","description":"","description_allow_html":false,"layout":"IPY_MODEL_71fe8c9aabb7429d89db5893e0eabf54","placeholder":"​","style":"IPY_MODEL_cd04f4d6648046149a4bff4b8850a67c","tabbable":null,"tooltip":null,"value":" 60.0/60.0 [00:00&lt;00:00, 5.66kB/s]"}}},"version_major":2,"version_minor":0}}},"nbformat":4,"nbformat_minor":5}